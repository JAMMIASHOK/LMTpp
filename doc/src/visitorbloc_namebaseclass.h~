#ifndef VISITOR_BLOC_NAME_BASE_CLASS_H
#define VISITOR_BLOC_NAME_BASE_CLASS_H

#include<iostream>
#include<cstdlib>
#include<fstream>
#include<vector>
#include<string>

using namespace std ;

//struct CommentItem ;
//struct LangRef ;

struct Bloc ;
struct Classe ;
struct Function ;
struct Struct ;
struct VisitorBloc ;
struct ListLink ;


struct VisitorBloc_NameBaseClass : public VisitorBloc {
    VisitorBloc_NameBaseClass( ListLink* plink ) { ptr_list_link = plink ; }
    virtual ~VisitorBloc_NameBaseClass() ;
    virtual void function_at_Bloc( Bloc* b ) ;
    virtual void function_at_Classe( Classe* c ) ;
    virtual void function_at_Struct( Struct* s ) ;
    virtual void function_at_Function( Function* f ) ;
    //bool isNameBaseClass( string& n ) ;
    //bool isPrincipalNameBaseClass( string& n ) ;

    ListLink* ptr_list_link ;
} ;


#endif

