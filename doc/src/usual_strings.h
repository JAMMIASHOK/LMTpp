#ifndef USUAL_STRINGS_H
#define USUAL_STRINGS_H
#define NB_OPERATORS 106
#define NB_PREALLOCATED_STRINGS 415
#define STRING_0_NUM 0
#define STRING___init_using_default_values___NUM 1
#define STRING___import_c_decl___NUM 2
#define STRING___continue___NUM 3
#define STRING___continue_n___NUM 4
#define STRING___break___NUM 5
#define STRING___break_n___NUM 6
#define STRING___pass___NUM 7
#define STRING___self___NUM 8
#define STRING___this___NUM 9
#define STRING___try___NUM 10
#define STRING___catch___NUM 11
#define STRING___interact___NUM 12
#define STRING___abstract___NUM 13
#define STRING___delete___NUM 14
#define STRING___transient___NUM 15
#define STRING___virtual___NUM 16
#define STRING___static___NUM 17
#define STRING___property___NUM 18
#define STRING___label___NUM 19
#define STRING___class___NUM 20
#define STRING___def___NUM 21
#define STRING___comma_dot___NUM 22
#define STRING___import___NUM 23
#define STRING___include___NUM 24
#define STRING___exec___NUM 25
#define STRING___inherits___NUM 26
#define STRING___pertinence___NUM 27
#define STRING___when___NUM 28
#define STRING___or_else___NUM 29
#define STRING___else___NUM 30
#define STRING___while___NUM 31
#define STRING___for___NUM 32
#define STRING___if___NUM 33
#define STRING___return___NUM 34
#define STRING___return_n___NUM 35
#define STRING___const___NUM 36
#define STRING___throw___NUM 37
#define STRING___infon___NUM 38
#define STRING___info___NUM 39
#define STRING___print___NUM 40
#define STRING___in___NUM 41
#define STRING___alternative___NUM 42
#define STRING___comma___NUM 43
#define STRING_reassign_NUM 44
#define STRING_assign_NUM 45
#define STRING_assign_type_NUM 46
#define STRING___lambda___NUM 47
#define STRING___ref___NUM 48
#define STRING_partial_instanciation_NUM 49
#define STRING_self_or_NUM 50
#define STRING_self_xor_NUM 51
#define STRING_self_and_NUM 52
#define STRING_self_mod_NUM 53
#define STRING_self_shift_left_NUM 54
#define STRING_self_shift_right_NUM 55
#define STRING_self_div_NUM 56
#define STRING_self_mul_NUM 57
#define STRING_self_sub_NUM 58
#define STRING_self_add_NUM 59
#define STRING_self_div_int_NUM 60
#define STRING_self_concatenate_NUM 61
#define STRING_shift_left_long_str_NUM 62
#define STRING_shift_left_then_endl_NUM 63
#define STRING_shift_left_NUM 64
#define STRING_shift_right_NUM 65
#define STRING_exec_in_prev_scope_NUM 66
#define STRING_or_boolean_NUM 67
#define STRING_and_boolean_NUM 68
#define STRING_xor_boolean_NUM 69
#define STRING_not_boolean_NUM 70
#define STRING_not_equal_NUM 71
#define STRING_equal_NUM 72
#define STRING_superior_equal_NUM 73
#define STRING_inferior_equal_NUM 74
#define STRING_superior_NUM 75
#define STRING_inferior_NUM 76
#define STRING___is_a___NUM 77
#define STRING_concatenate_NUM 78
#define STRING_range_NUM 79
#define STRING_triple_dots_NUM 80
#define STRING_add_NUM 81
#define STRING_sub_NUM 82
#define STRING_mod_NUM 83
#define STRING_mul_NUM 84
#define STRING_div_NUM 85
#define STRING_div_int_NUM 86
#define STRING_ml_div_NUM 87
#define STRING_pow_NUM 88
#define STRING___pow___NUM 89
#define STRING_not_bitwise_NUM 90
#define STRING_trans_NUM 91
#define STRING_tensorial_product_NUM 92
#define STRING_post_dec_NUM 93
#define STRING_post_inc_NUM 94
#define STRING_pointer_on_NUM 95
#define STRING_pointed_value_NUM 96
#define STRING_doubledot_NUM 97
#define STRING_doubledotdot_NUM 98
#define STRING___get_value_prop___NUM 99
#define STRING___new___NUM 100
#define STRING_calc_name_NUM 101
#define STRING_doubledoubledot_NUM 102
#define STRING_get_attr_ptr_NUM 103
#define STRING_get_attr_NUM 104
#define STRING___string_assembly___NUM 105
#define STRING_Def_NUM 106
#define STRING_Error_NUM 107
#define STRING_Bool_NUM 108
#define STRING_Unsigned8_NUM 109
#define STRING_Unsigned16_NUM 110
#define STRING_Unsigned32_NUM 111
#define STRING_Unsigned64_NUM 112
#define STRING_Int8_NUM 113
#define STRING_Int16_NUM 114
#define STRING_Int32_NUM 115
#define STRING_Int64_NUM 116
#define STRING_Rationnal_NUM 117
#define STRING_Float32_NUM 118
#define STRING_Float64_NUM 119
#define STRING_Float96_NUM 120
#define STRING_Void_NUM 121
#define STRING_BlockOfTok_NUM 122
#define STRING_CFile_NUM 123
#define STRING_UntypedPtr_NUM 124
#define STRING_Property_NUM 125
#define STRING_VarArgs_NUM 126
#define STRING_InternalVariable_NUM 127
#define STRING_Functionnal_NUM 128
#define STRING_Op_NUM 129
#define STRING_CodeWriter__NUM 130
#define STRING_CodeWriterAlt__NUM 131
#define STRING_Lambda_NUM 132
#define STRING_Label_NUM 133
#define STRING_CompiledFunctionSet__NUM 134
#define STRING_DlLoader_NUM 135
#define STRING_Pthread_NUM 136
#define STRING_Semaphore_NUM 137
#define STRING_init_NUM 138
#define STRING_write_NUM 139
#define STRING_read_NUM 140
#define STRING_close_NUM 141
#define STRING_flush_NUM 142
#define STRING_destroy_NUM 143
#define STRING_eof_NUM 144
#define STRING_tell_NUM 145
#define STRING_seek_NUM 146
#define STRING_get_size_NUM 147
#define STRING_open_NUM 148
#define STRING_popen_NUM 149
#define STRING_last_modification_time_or_zero_of_file_named_NUM 150
#define STRING_get_next_line__NUM 151
#define STRING_untyped_ptr_on_NUM 152
#define STRING_untyped_ptr_on_type_of_NUM 153
#define STRING_ptr_on_type_to_def_NUM 154
#define STRING_free_NUM 155
#define STRING___get_pointed_value___NUM 156
#define STRING___get_data_in_dyn_vec___NUM 157
#define STRING___uninitialised_vec_using_partial_instanciation___NUM 158
#define STRING___get_data_in_static_vec___NUM 159
#define STRING_allocate_NUM 160
#define STRING_memcpy_NUM 161
#define STRING_conversion_to_NUM 162
#define STRING___has_type_of_function___NUM 163
#define STRING___get_type_of_function___NUM 164
#define STRING___is_a_Property___NUM 165
#define STRING_contains_only_named_variables_included_in_self_non_static_variables_NUM 166
#define STRING_init_using_varargs_NUM 167
#define STRING_call_NUM 168
#define STRING_call_with_return_NUM 169
#define STRING_call_select_NUM 170
#define STRING_nb_unnamed_arguments_NUM 171
#define STRING_nb_named_arguments_NUM 172
#define STRING_get_unnamed_argument_nb_NUM 173
#define STRING_get_named_argument_nb_NUM 174
#define STRING_get_name_of_named_argument_nb_NUM 175
#define STRING_push_unnamed_NUM 176
#define STRING_push_named_NUM 177
#define STRING_select_NUM 178
#define STRING_contains_data_of_same_type_only_NUM 179
#define STRING_assign_var_NUM 180
#define STRING_init_using_var_NUM 181
#define STRING_comes_from_an_apply_with_functionnal_arg_NUM 182
#define STRING_comes_from_a_get_attr_with_functionnal_lhs_NUM 183
#define STRING_comes_from_a_predefined_functionnal_NUM 184
#define STRING_extract_arg_defined_in_functionnal_NUM 185
#define STRING_extract_var_defined_in_functionnal_NUM 186
#define STRING_extract_var_nb_defined_in_functionnal_NUM 187
#define STRING_extract_attr_defined_in_functionnal_NUM 188
#define STRING_nb_variables_in_functionnal_NUM 189
#define STRING_variables_num_is_functionnal_in_functionnal_NUM 190
#define STRING_is_a_Ref_on_Functionnal_NUM 191
#define STRING_node_count_NUM 192
#define STRING_ops_count_NUM 193
#define STRING_nb_sub_symbols_NUM 194
#define STRING_log_NUM 195
#define STRING_heaviside_NUM 196
#define STRING_pos_part_NUM 197
#define STRING_abs_NUM 198
#define STRING_eqz_NUM 199
#define STRING_exp_NUM 200
#define STRING_sin_NUM 201
#define STRING_cos_NUM 202
#define STRING_tan_NUM 203
#define STRING_asin_NUM 204
#define STRING_acos_NUM 205
#define STRING_atan_NUM 206
#define STRING_sinh_NUM 207
#define STRING_cosh_NUM 208
#define STRING_tanh_NUM 209
#define STRING_known_at_compile_time_NUM 210
#define STRING_symbol_NUM 211
#define STRING_graphviz_string_NUM 212
#define STRING_cpp_string_NUM 213
#define STRING_tex_string_NUM 214
#define STRING_ser_string_NUM 215
#define STRING_value_NUM 216
#define STRING_diff_NUM 217
#define STRING_polynomial_expansion__NUM 218
#define STRING_quadratic_expansion__NUM 219
#define STRING_subs_numerical_NUM 220
#define STRING_subs_NUM 221
#define STRING_linearize_discontinuity_children_NUM 222
#define STRING_depends_on_NUM 223
#define STRING_expand_NUM 224
#define STRING_a_posteriori_simplification_NUM 225
#define STRING_apply_NUM 226
#define STRING___integration___NUM 227
#define STRING___make_poly_fit___NUM 228
#define STRING_beg_value_valid_NUM 229
#define STRING_end_value_valid_NUM 230
#define STRING_beg_value_inclusive_NUM 231
#define STRING_end_value_inclusive_NUM 232
#define STRING_beg_value_NUM 233
#define STRING_end_value_NUM 234
#define STRING_set_beg_value_NUM 235
#define STRING_set_end_value_NUM 236
#define STRING_set_access_cost_NUM 237
#define STRING_set_nb_simd_terms_NUM 238
#define STRING_add_expr_NUM 239
#define STRING_to_string_NUM 240
#define STRING_invariant_NUM 241
#define STRING_to_graphviz_NUM 242
#define STRING_go_NUM 243
#define STRING_call_function_NUM 244
#define STRING_append_so_NUM 245
#define STRING_find_symbol_NUM 246
#define STRING_get_last_error_NUM 247
#define STRING_exec_ccode_function_NUM 248
#define STRING_exec_untyped_ptr_function_NUM 249
#define STRING_pthread_create__NUM 250
#define STRING_pthread_join_NUM 251
#define STRING_join_NUM 252
#define STRING_wait_NUM 253
#define STRING_post_NUM 254
#define STRING_save_and_post_NUM 255
#define STRING___add_paint_function_to_display_window___NUM 256
#define STRING___rm_paint_functions_from_display_windows___NUM 257
#define STRING___update_display_windows___NUM 258
#define STRING___save_as_display_windows___NUM 259
#define STRING___set_min_max_display_windows___NUM 260
#define STRING___wait_for_display_windows___NUM 261
#define STRING___set_val_display_windows___NUM 262
#define STRING_get_QT_LIBRARIES_NUM 263
#define STRING_get_QT_INCLUDE_DIR_NUM 264
#define STRING_get_MET_INSTALL_DIR_NUM 265
#define STRING_get_epsilon_NUM 266
#define STRING_system_NUM 267
#define STRING_is_of_type_Def_NUM 268
#define STRING_is_of_type_Error_NUM 269
#define STRING_is_of_type_Bool_NUM 270
#define STRING_is_of_type_Unsigned8_NUM 271
#define STRING_is_of_type_Unsigned16_NUM 272
#define STRING_is_of_type_Unsigned32_NUM 273
#define STRING_is_of_type_Unsigned64_NUM 274
#define STRING_is_of_type_Int8_NUM 275
#define STRING_is_of_type_Int16_NUM 276
#define STRING_is_of_type_Int32_NUM 277
#define STRING_is_of_type_Int64_NUM 278
#define STRING_is_of_type_Rationnal_NUM 279
#define STRING_is_of_type_Float32_NUM 280
#define STRING_is_of_type_Float64_NUM 281
#define STRING_is_of_type_Float96_NUM 282
#define STRING_is_of_type_Void_NUM 283
#define STRING_is_of_type_BlockOfTok_NUM 284
#define STRING_is_of_type_CFile_NUM 285
#define STRING_is_of_type_UntypedPtr_NUM 286
#define STRING_is_of_type_Property_NUM 287
#define STRING_is_of_type_VarArgs_NUM 288
#define STRING_is_of_type_InternalVariable_NUM 289
#define STRING_is_of_type_Functionnal_NUM 290
#define STRING_is_of_type_Op_NUM 291
#define STRING_is_of_type_CodeWriter__NUM 292
#define STRING_is_of_type_CodeWriterAlt__NUM 293
#define STRING_is_of_type_Lambda_NUM 294
#define STRING_is_of_type_Label_NUM 295
#define STRING_is_of_type_CompiledFunctionSet__NUM 296
#define STRING_is_of_type_DlLoader_NUM 297
#define STRING_is_of_type_Pthread_NUM 298
#define STRING_is_of_type_Semaphore_NUM 299
#define STRING_destroy_instanciated_attributes_NUM 300
#define STRING_strlen_NUM 301
#define STRING_init_and_return_false_if_same_types_NUM 302
#define STRING_reassign_and_return_false_if_same_types_NUM 303
#define STRING_type_promote_NUM 304
#define STRING_write_to_stream_NUM 305
#define STRING___read_from_stream___NUM 306
#define STRING_ceil_NUM 307
#define STRING_atan2_NUM 308
#define STRING_and_bitwise_NUM 309
#define STRING_or_bitwise_NUM 310
#define STRING_xor_bitwise_NUM 311
#define STRING_are_of_same_type_NUM 312
#define STRING_are_of_different_type_NUM 313
#define STRING_are_of_type_Def_NUM 314
#define STRING_are_radically_different_NUM 315
#define STRING_are_similar_for_sure_NUM 316
#define STRING_is_a_class_NUM 317
#define STRING_have_same_name_NUM 318
#define STRING_base_name_NUM 319
#define STRING_has_size_and_select_NUM 320
#define STRING_nb_attributes_of_NUM 321
#define STRING_name_attribute_nb_of_NUM 322
#define STRING_attribute_nb_of_NUM 323
#define STRING_nb_static_attributes_of_NUM 324
#define STRING_name_static_attribute_nb_of_NUM 325
#define STRING_static_attribute_nb_of_NUM 326
#define STRING_nb_template_parameters_of_NUM 327
#define STRING_name_template_parameter_nb_of_NUM 328
#define STRING_template_parameter_nb_of_NUM 329
#define STRING_type_of_NUM 330
#define STRING_size_of_NUM 331
#define STRING_size_of_if_in_vec_NUM 332
#define STRING___needed_alignement_in_bits___NUM 333
#define STRING___needed_alignement_in_bytes___NUM 334
#define STRING_has___for___method_NUM 335
#define STRING_rm_spaces_at_beg_of_lines_NUM 336
#define STRING_absolute_filename_NUM 337
#define STRING_get_includes_of_cpp_named_NUM 338
#define STRING___nb_stack_level___NUM 339
#define STRING___file_at_stack_level___NUM 340
#define STRING___line_at_stack_level___NUM 341
#define STRING___col_at_stack_level___NUM 342
#define STRING___line_str_at_stack_level___NUM 343
#define STRING_md5_str_NUM 344
#define STRING_time_of_day_in_sec_NUM 345
#define STRING_directory_of_NUM 346
#define STRING___argv__size___NUM 347
#define STRING___argv__item___NUM 348
#define STRING_split_dir_NUM 349
#define STRING_getenv_NUM 350
#define STRING_getcwd_NUM 351
#define STRING_get_os_type_NUM 352
#define STRING_get_cpu_type_NUM 353
#define STRING_get_type_md5_sum_NUM 354
#define STRING_int32_display_NUM 355
#define STRING_set_thread_return_value_NUM 356
#define STRING_rand_NUM 357
#define STRING_randf_NUM 358
#define STRING_mpi_size_NUM 359
#define STRING_mpi_rank_NUM 360
#define STRING_mpi_send_NUM 361
#define STRING_mpi_recv_NUM 362
#define STRING_inheritance_NUM 363
#define STRING_true_type_NUM 364
#define STRING_contains_virtual_method_NUM 365
#define STRING_has_cached_type_NUM 366
#define STRING_mmap_file_NUM 367
#define STRING_munmap_NUM 368
#define STRING_is_a_partial_inst_NUM 369
#define STRING_change_behavior_NUM 370
#define STRING_tuple_NUM 371
#define STRING_varargs_NUM 372
#define STRING_throw_failed_assertion_NUM 373
#define STRING_assert_NUM 374
#define STRING_zip_NUM 375
#define STRING__1_andreassign_2__eq__3_NUM 376
#define STRING_SimpleStaticVector_NUM 377
#define STRING_T_NUM 378
#define STRING_size_NUM 379
#define STRING_String_NUM 380
#define STRING___property_init___NUM 381
#define STRING___property_reassign___NUM 382
#define STRING___property_call___NUM 383
#define STRING___property_call_with_return___NUM 384
#define STRING___property_call_partial_inst___NUM 385
#define STRING___property_call_partial_inst_with_return___NUM 386
#define STRING_make_little_heterogeneous_array_NUM 387
#define STRING_apply_functionnal_NUM 388
#define STRING_apply_functionnal_with_return_NUM 389
#define STRING__self_NUM 390
#define STRING_true_NUM 391
#define STRING_false_NUM 392
#define STRING__0_NUM 393
#define STRING__1_NUM 394
#define STRING__2_NUM 395
#define STRING__3_NUM 396
#define STRING__4_NUM 397
#define STRING__5_NUM 398
#define STRING__6_NUM 399
#define STRING__7_NUM 400
#define STRING__8_NUM 401
#define STRING__9_NUM 402
#define STRING__10_NUM 403
#define STRING__11_NUM 404
#define STRING__12_NUM 405
#define STRING__13_NUM 406
#define STRING__14_NUM 407
#define STRING__15_NUM 408
#define STRING__16_NUM 409
#define STRING__17_NUM 410
#define STRING__18_NUM 411
#define STRING__19_NUM 412
#define STRING_cant_be_converted_to_bool_NUM 413
#define STRING_0_inheritance_NUM 414
inline unsigned behavior_of_operator(int num_op) {
    static const unsigned tab[] = {0,2,2,0,2,0,2,0,0,0,2,16,0,0,2,2,2,2,2,16,16,16,3,2,2,2,3,3,3,3,3,16,16,16,2,16,2,2,2,2,2,3,2,3,3,3,3,3,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,3,3,3,3,3,3,3,3,1,3,6,3,3,3,3,3,3,3,2,1,3,1,1,2,2,3,3,2,2,2,3,3,3,3,};
    return tab[num_op];
}
inline const char *name_of_operator(int num_op) {
    static const char *tab[] = {"0","init_using_default_values","import_c_decl","continue","continue_n","break","break_n","pass","self","this","try","catch","interact","abstract","delete","transient","virtual","static","property","label","class","def",";","import","include","exec","inherits","pertinence","when","or_else","else","while","for","if","return","return_n","const","throw","infon","info","print","in","?",",","=",":=","~=","=>","ref","partial_instanciation","|=","^=","&=","%=","<<=",">>=","/=","*=","-=","+=","//=","++=","<<<<","<<<","<<",">>","exec_in_prev_scope","or","and","xor","not","!=","==",">=","<=",">","<","is_a","+++","..","...","+","-","%","*","/","//","\\","**","^","~","'","***","--","++","&","@",":",":.","get_value_prop","new","$","::","->",".","1",};
    return tab[num_op];
}
inline unsigned name_size_of_operator(int num_op) {
    static const unsigned tab[] = {1,25,13,8,10,5,7,4,4,4,3,5,8,8,6,9,7,6,8,5,5,3,1,6,7,4,8,10,4,7,4,5,3,2,6,8,5,5,5,4,5,2,1,1,1,2,2,2,3,21,2,2,2,2,3,3,2,2,2,2,3,3,4,3,2,2,18,2,3,3,3,2,2,2,2,1,1,4,3,2,3,1,1,1,1,1,2,1,2,1,1,1,3,2,2,1,1,1,2,14,3,1,2,2,1,1,};
    return tab[num_op];
}
inline const char *cpp_name_of_operator(int num_op) {
    static const char *tab[] = {"0","__init_using_default_values__","__import_c_decl__","__continue__","__continue_n__","__break__","__break_n__","__pass__","__self__","__this__","__try__","__catch__","__interact__","__abstract__","__delete__","__transient__","__virtual__","__static__","__property__","__label__","__class__","__def__","__comma_dot__","__import__","__include__","__exec__","__inherits__","__pertinence__","__when__","__or_else__","__else__","__while__","__for__","__if__","__return__","__return_n__","__const__","__throw__","__infon__","__info__","__print__","__in__","__alternative__","__comma__","reassign","assign","assign_type","__lambda__","__ref__","partial_instanciation","self_or","self_xor","self_and","self_mod","self_shift_left","self_shift_right","self_div","self_mul","self_sub","self_add","self_div_int","self_concatenate","shift_left_long_str","shift_left_then_endl","shift_left","shift_right","exec_in_prev_scope","or_boolean","and_boolean","xor_boolean","not_boolean","not_equal","equal","superior_equal","inferior_equal","superior","inferior","__is_a__","concatenate","range","triple_dots","add","sub","mod","mul","div","div_int","ml_div","pow","__pow__","not_bitwise","trans","tensorial_product","post_dec","post_inc","pointer_on","pointed_value","doubledot","doubledotdot","__get_value_prop__","__new__","calc_name","doubledoubledot","get_attr_ptr","get_attr","__string_assembly__",};
    return tab[num_op];
}
inline unsigned cpp_name_size_of_operator(int num_op) {
    static const unsigned tab[] = {1,29,17,12,14,9,11,8,8,8,7,9,12,12,10,13,11,10,12,9,9,7,13,10,11,8,12,14,8,11,8,9,7,6,10,12,9,9,9,8,9,6,15,9,8,6,11,10,7,21,7,8,8,8,15,16,8,8,8,8,12,16,19,20,10,11,18,10,11,11,11,9,5,14,14,8,8,8,11,5,11,3,3,3,3,3,7,6,3,7,11,5,17,8,8,10,13,9,12,18,7,9,15,12,8,19,};
    return tab[num_op];
}
#endif // USUAL_STRINGS_H
