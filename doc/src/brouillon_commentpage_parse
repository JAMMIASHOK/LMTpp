

    localstring = str ;
    start = 0 ;
    while (true) {
        localtoken = extraire_token( &pos,localstring,start ) ;
        
        
    }
    if (chercher_motif( localstring,"/*!",&pos )) {
        commentaire.clear() ;
        localstring = localstring.substr(pos+3,localstring.size()-2-pos ) ; // on récupère ce qui vient après /*!
        commentaire.push_back( localstring ) ;
        while ( true ) {
            entree.getline( str,LENGTH_STRING ) ;
            n = entree.gcount() ;
            if ( n==0 ) break ;
            localstring = str ;
            if (chercher_motif( localstring,"*/",&pos )) {
                    localstring = localstring.substr(0,pos ) ;
                    //string_a_analyser = localstring.substr(pos+2,localstring.size()-1-pos ) + ' ' ;
                    commentaire.push_back( localstring ) ;
                    break ;
            }
            else 
                commentaire.push_back( localstring ) ;
        }

        //cout << " comm =||" << comm << "||" << endl ;
        ptr_comment = new Comment() ;
        addComment( ptr_comment ) ;
        ptr_comment->parse( commentaire ) ;
        //for(i=0;i<commentaire.size();i++) cout << " |||" << commentaire[i] << "|" << endl ;
    }
 }
 commentaire.clear() ;
 