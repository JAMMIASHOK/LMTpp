    cur_dir = "" ;
    for(iter = ma.begin();iter != ma.end(); ++iter) {
        dir = extract_path(iter->first) ;
        if (dir.size() > 0)
            i = compter_caractere(cur_dir,'/' ) + 1 ; 
        else 
            i = 0 ;
        stmp = inter(dir,cur_dir) ;
        cerr << " =============================================" << endl ;
        cerr << " cur_dir = " << cur_dir << endl ;
        cerr << " dir     = " << dir << endl ;
        cerr << " inter(dir,cur_dir) = " << inter(dir,cur_dir) << endl ;
        if (stmp.size() > 0)
            ii = compter_caractere(stmp,'/' ) + 1 ;
        else
            ii = 0 ;  
        cerr << " nb item de dir = " << i << endl ;
        cerr << " nb item de inter(dir,cur_dir) = " << ii << endl ;
        n = i - ii ;
        for(j=0;j<n;j++)
            pageWeb << "</ul>" << std::endl ;
        extract_list_lexem_of_path(&next,list_index,dir,dir.size(),0) ;
        n = list_index.size() / 2 ;
        cerr << "  dir = " << dir << endl ;
        cerr << "|||" ;
        for(j=0;j<n;j++) 
            cerr << "|" << dir.substr(list_index[2*j],list_index[2*j+1]-list_index[2*j]) << "| " ; 
        cerr << endl ;
        for(j=ii;j<n;j++) {
            pageWeb << "<ul>" << std::endl ;
            pageWeb << "<li>" << french2HTML( dir.substr(list_index[2*j],list_index[2*j+1]-list_index[2*j]) ) << "</li>" << std::endl ;
        }
        stmp = extract_last_name_of_path(iter->first) ;
        pageWeb << "<li>" << linkHTML( pt->reference(), iter->second->reference(),stmp ) << "</li>" << std::endl ;
        cur_dir = dir ;
    }
    i = compter_caractere(cur_dir,'/' ) + 1 ;
    for(j=0;j<i;j++)
        pageWeb << "</ul>" << std::endl ;