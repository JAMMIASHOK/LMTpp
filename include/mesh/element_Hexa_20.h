#ifndef LMT_HEXA_20
#define LMT_HEXA_20
namespace LMT {
inline const double *gauss_point_for_order(unsigned order, const Hexa_20 &elem) { /// order -> degre du polynome a integrer exactement
    static const unsigned offset[] = { 0, 33, 66, 99, 132, 269, 406, 543, 680, 817, }; // fonction de lordre du poly
    static const double values[] = {
        0.125,0.788675134595,0.788675134595,0.211324865405,
        0.125,0.788675134595,0.211324865405,0.211324865405,
        0.125,0.211324865405,0.788675134595,0.211324865405,
        0.125,0.211324865405,0.211324865405,0.211324865405,
        0.125,0.788675134595,0.788675134595,0.788675134595,
        0.125,0.788675134595,0.211324865405,0.788675134595,
        0.125,0.211324865405,0.788675134595,0.788675134595,
        0.125,0.211324865405,0.211324865405,0.788675134595,
        0.0,
        0.125,0.788675134595,0.788675134595,0.211324865405,
        0.125,0.788675134595,0.211324865405,0.211324865405,
        0.125,0.211324865405,0.788675134595,0.211324865405,
        0.125,0.211324865405,0.211324865405,0.211324865405,
        0.125,0.788675134595,0.788675134595,0.788675134595,
        0.125,0.788675134595,0.211324865405,0.788675134595,
        0.125,0.211324865405,0.788675134595,0.788675134595,
        0.125,0.211324865405,0.211324865405,0.788675134595,
        0.0,
        0.125,0.788675134595,0.788675134595,0.211324865405,
        0.125,0.788675134595,0.211324865405,0.211324865405,
        0.125,0.211324865405,0.788675134595,0.211324865405,
        0.125,0.211324865405,0.211324865405,0.211324865405,
        0.125,0.788675134595,0.788675134595,0.788675134595,
        0.125,0.788675134595,0.211324865405,0.788675134595,
        0.125,0.211324865405,0.788675134595,0.788675134595,
        0.125,0.211324865405,0.211324865405,0.788675134595,
        0.0,
        0.125,0.788675134595,0.788675134595,0.211324865405,
        0.125,0.788675134595,0.211324865405,0.211324865405,
        0.125,0.211324865405,0.788675134595,0.211324865405,
        0.125,0.211324865405,0.211324865405,0.211324865405,
        0.125,0.788675134595,0.788675134595,0.788675134595,
        0.125,0.788675134595,0.211324865405,0.788675134595,
        0.125,0.211324865405,0.788675134595,0.788675134595,
        0.125,0.211324865405,0.211324865405,0.788675134595,
        0.0,
        0.036968449931412875,0.5,0.962910049886276,0.5,
        0.036968449931412875,0.5,0.037089950113724,0.5,
        0.036968449931412875,0.962910049886276,0.5,0.5,
        0.036968449931412875,0.037089950113724,0.5,0.5,
        0.036968449931412875,0.5,0.5,0.962910049886276,
        0.036968449931412875,0.5,0.5,0.037089950113724,
        0.0117626886145405,0.962910049886276,0.962910049886276,0.5,
        0.0117626886145405,0.037089950113724,0.962910049886276,0.5,
        0.0117626886145405,0.962910049886276,0.037089950113724,0.5,
        0.0117626886145405,0.037089950113724,0.037089950113724,0.5,
        0.0117626886145405,0.962910049886276,0.5,0.962910049886276,
        0.0117626886145405,0.962910049886276,0.5,0.037089950113724,
        0.0117626886145405,0.037089950113724,0.5,0.962910049886276,
        0.0117626886145405,0.037089950113724,0.5,0.037089950113724,
        0.0117626886145405,0.5,0.962910049886276,0.962910049886276,
        0.0117626886145405,0.5,0.037089950113724,0.962910049886276,
        0.0117626886145405,0.5,0.962910049886276,0.037089950113724,
        0.0117626886145405,0.5,0.037089950113724,0.037089950113724,
        0.0515417327839295,0.66540748184964399999,0.66540748184964399999,0.66540748184964399999,
        0.0515417327839295,0.66540748184964399999,0.66540748184964399999,0.33459251815035600001,
        0.0515417327839295,0.33459251815035600001,0.66540748184964399999,0.66540748184964399999,
        0.0515417327839295,0.33459251815035600001,0.66540748184964399999,0.33459251815035600001,
        0.0515417327839295,0.66540748184964399999,0.33459251815035600001,0.66540748184964399999,
        0.0515417327839295,0.66540748184964399999,0.33459251815035600001,0.33459251815035600001,
        0.0515417327839295,0.33459251815035600001,0.33459251815035600001,0.66540748184964399999,
        0.0515417327839295,0.33459251815035600001,0.33459251815035600001,0.33459251815035600001,
        0.028087896845700125,0.86705626437605750001,0.86705626437605750001,0.86705626437605750001,
        0.028087896845700125,0.86705626437605750001,0.86705626437605750001,0.13294373562394249999,
        0.028087896845700125,0.13294373562394249999,0.86705626437605750001,0.86705626437605750001,
        0.028087896845700125,0.13294373562394249999,0.86705626437605750001,0.13294373562394249999,
        0.028087896845700125,0.86705626437605750001,0.13294373562394249999,0.86705626437605750001,
        0.028087896845700125,0.86705626437605750001,0.13294373562394249999,0.13294373562394249999,
        0.028087896845700125,0.13294373562394249999,0.13294373562394249999,0.86705626437605750001,
        0.028087896845700125,0.13294373562394249999,0.13294373562394249999,0.13294373562394249999,
        0.0,
        0.036968449931412875,0.5,0.962910049886276,0.5,
        0.036968449931412875,0.5,0.037089950113724,0.5,
        0.036968449931412875,0.962910049886276,0.5,0.5,
        0.036968449931412875,0.037089950113724,0.5,0.5,
        0.036968449931412875,0.5,0.5,0.962910049886276,
        0.036968449931412875,0.5,0.5,0.037089950113724,
        0.0117626886145405,0.962910049886276,0.962910049886276,0.5,
        0.0117626886145405,0.037089950113724,0.962910049886276,0.5,
        0.0117626886145405,0.962910049886276,0.037089950113724,0.5,
        0.0117626886145405,0.037089950113724,0.037089950113724,0.5,
        0.0117626886145405,0.962910049886276,0.5,0.962910049886276,
        0.0117626886145405,0.962910049886276,0.5,0.037089950113724,
        0.0117626886145405,0.037089950113724,0.5,0.962910049886276,
        0.0117626886145405,0.037089950113724,0.5,0.037089950113724,
        0.0117626886145405,0.5,0.962910049886276,0.962910049886276,
        0.0117626886145405,0.5,0.037089950113724,0.962910049886276,
        0.0117626886145405,0.5,0.962910049886276,0.037089950113724,
        0.0117626886145405,0.5,0.037089950113724,0.037089950113724,
        0.0515417327839295,0.66540748184964399999,0.66540748184964399999,0.66540748184964399999,
        0.0515417327839295,0.66540748184964399999,0.66540748184964399999,0.33459251815035600001,
        0.0515417327839295,0.33459251815035600001,0.66540748184964399999,0.66540748184964399999,
        0.0515417327839295,0.33459251815035600001,0.66540748184964399999,0.33459251815035600001,
        0.0515417327839295,0.66540748184964399999,0.33459251815035600001,0.66540748184964399999,
        0.0515417327839295,0.66540748184964399999,0.33459251815035600001,0.33459251815035600001,
        0.0515417327839295,0.33459251815035600001,0.33459251815035600001,0.66540748184964399999,
        0.0515417327839295,0.33459251815035600001,0.33459251815035600001,0.33459251815035600001,
        0.028087896845700125,0.86705626437605750001,0.86705626437605750001,0.86705626437605750001,
        0.028087896845700125,0.86705626437605750001,0.86705626437605750001,0.13294373562394249999,
        0.028087896845700125,0.13294373562394249999,0.86705626437605750001,0.86705626437605750001,
        0.028087896845700125,0.13294373562394249999,0.86705626437605750001,0.13294373562394249999,
        0.028087896845700125,0.86705626437605750001,0.13294373562394249999,0.86705626437605750001,
        0.028087896845700125,0.86705626437605750001,0.13294373562394249999,0.13294373562394249999,
        0.028087896845700125,0.13294373562394249999,0.13294373562394249999,0.86705626437605750001,
        0.028087896845700125,0.13294373562394249999,0.13294373562394249999,0.13294373562394249999,
        0.0,
        0.036968449931412875,0.5,0.962910049886276,0.5,
        0.036968449931412875,0.5,0.037089950113724,0.5,
        0.036968449931412875,0.962910049886276,0.5,0.5,
        0.036968449931412875,0.037089950113724,0.5,0.5,
        0.036968449931412875,0.5,0.5,0.962910049886276,
        0.036968449931412875,0.5,0.5,0.037089950113724,
        0.0117626886145405,0.962910049886276,0.962910049886276,0.5,
        0.0117626886145405,0.037089950113724,0.962910049886276,0.5,
        0.0117626886145405,0.962910049886276,0.037089950113724,0.5,
        0.0117626886145405,0.037089950113724,0.037089950113724,0.5,
        0.0117626886145405,0.962910049886276,0.5,0.962910049886276,
        0.0117626886145405,0.962910049886276,0.5,0.037089950113724,
        0.0117626886145405,0.037089950113724,0.5,0.962910049886276,
        0.0117626886145405,0.037089950113724,0.5,0.037089950113724,
        0.0117626886145405,0.5,0.962910049886276,0.962910049886276,
        0.0117626886145405,0.5,0.037089950113724,0.962910049886276,
        0.0117626886145405,0.5,0.962910049886276,0.037089950113724,
        0.0117626886145405,0.5,0.037089950113724,0.037089950113724,
        0.0515417327839295,0.66540748184964399999,0.66540748184964399999,0.66540748184964399999,
        0.0515417327839295,0.66540748184964399999,0.66540748184964399999,0.33459251815035600001,
        0.0515417327839295,0.33459251815035600001,0.66540748184964399999,0.66540748184964399999,
        0.0515417327839295,0.33459251815035600001,0.66540748184964399999,0.33459251815035600001,
        0.0515417327839295,0.66540748184964399999,0.33459251815035600001,0.66540748184964399999,
        0.0515417327839295,0.66540748184964399999,0.33459251815035600001,0.33459251815035600001,
        0.0515417327839295,0.33459251815035600001,0.33459251815035600001,0.66540748184964399999,
        0.0515417327839295,0.33459251815035600001,0.33459251815035600001,0.33459251815035600001,
        0.028087896845700125,0.86705626437605750001,0.86705626437605750001,0.86705626437605750001,
        0.028087896845700125,0.86705626437605750001,0.86705626437605750001,0.13294373562394249999,
        0.028087896845700125,0.13294373562394249999,0.86705626437605750001,0.86705626437605750001,
        0.028087896845700125,0.13294373562394249999,0.86705626437605750001,0.13294373562394249999,
        0.028087896845700125,0.86705626437605750001,0.13294373562394249999,0.86705626437605750001,
        0.028087896845700125,0.86705626437605750001,0.13294373562394249999,0.13294373562394249999,
        0.028087896845700125,0.13294373562394249999,0.13294373562394249999,0.86705626437605750001,
        0.028087896845700125,0.13294373562394249999,0.13294373562394249999,0.13294373562394249999,
        0.0,
        0.036968449931412875,0.5,0.962910049886276,0.5,
        0.036968449931412875,0.5,0.037089950113724,0.5,
        0.036968449931412875,0.962910049886276,0.5,0.5,
        0.036968449931412875,0.037089950113724,0.5,0.5,
        0.036968449931412875,0.5,0.5,0.962910049886276,
        0.036968449931412875,0.5,0.5,0.037089950113724,
        0.0117626886145405,0.962910049886276,0.962910049886276,0.5,
        0.0117626886145405,0.037089950113724,0.962910049886276,0.5,
        0.0117626886145405,0.962910049886276,0.037089950113724,0.5,
        0.0117626886145405,0.037089950113724,0.037089950113724,0.5,
        0.0117626886145405,0.962910049886276,0.5,0.962910049886276,
        0.0117626886145405,0.962910049886276,0.5,0.037089950113724,
        0.0117626886145405,0.037089950113724,0.5,0.962910049886276,
        0.0117626886145405,0.037089950113724,0.5,0.037089950113724,
        0.0117626886145405,0.5,0.962910049886276,0.962910049886276,
        0.0117626886145405,0.5,0.037089950113724,0.962910049886276,
        0.0117626886145405,0.5,0.962910049886276,0.037089950113724,
        0.0117626886145405,0.5,0.037089950113724,0.037089950113724,
        0.0515417327839295,0.66540748184964399999,0.66540748184964399999,0.66540748184964399999,
        0.0515417327839295,0.66540748184964399999,0.66540748184964399999,0.33459251815035600001,
        0.0515417327839295,0.33459251815035600001,0.66540748184964399999,0.66540748184964399999,
        0.0515417327839295,0.33459251815035600001,0.66540748184964399999,0.33459251815035600001,
        0.0515417327839295,0.66540748184964399999,0.33459251815035600001,0.66540748184964399999,
        0.0515417327839295,0.66540748184964399999,0.33459251815035600001,0.33459251815035600001,
        0.0515417327839295,0.33459251815035600001,0.33459251815035600001,0.66540748184964399999,
        0.0515417327839295,0.33459251815035600001,0.33459251815035600001,0.33459251815035600001,
        0.028087896845700125,0.86705626437605750001,0.86705626437605750001,0.86705626437605750001,
        0.028087896845700125,0.86705626437605750001,0.86705626437605750001,0.13294373562394249999,
        0.028087896845700125,0.13294373562394249999,0.86705626437605750001,0.86705626437605750001,
        0.028087896845700125,0.13294373562394249999,0.86705626437605750001,0.13294373562394249999,
        0.028087896845700125,0.86705626437605750001,0.13294373562394249999,0.86705626437605750001,
        0.028087896845700125,0.86705626437605750001,0.13294373562394249999,0.13294373562394249999,
        0.028087896845700125,0.13294373562394249999,0.13294373562394249999,0.86705626437605750001,
        0.028087896845700125,0.13294373562394249999,0.13294373562394249999,0.13294373562394249999,
        0.0,
        0.036968449931412875,0.5,0.962910049886276,0.5,
        0.036968449931412875,0.5,0.037089950113724,0.5,
        0.036968449931412875,0.962910049886276,0.5,0.5,
        0.036968449931412875,0.037089950113724,0.5,0.5,
        0.036968449931412875,0.5,0.5,0.962910049886276,
        0.036968449931412875,0.5,0.5,0.037089950113724,
        0.0117626886145405,0.962910049886276,0.962910049886276,0.5,
        0.0117626886145405,0.037089950113724,0.962910049886276,0.5,
        0.0117626886145405,0.962910049886276,0.037089950113724,0.5,
        0.0117626886145405,0.037089950113724,0.037089950113724,0.5,
        0.0117626886145405,0.962910049886276,0.5,0.962910049886276,
        0.0117626886145405,0.962910049886276,0.5,0.037089950113724,
        0.0117626886145405,0.037089950113724,0.5,0.962910049886276,
        0.0117626886145405,0.037089950113724,0.5,0.037089950113724,
        0.0117626886145405,0.5,0.962910049886276,0.962910049886276,
        0.0117626886145405,0.5,0.037089950113724,0.962910049886276,
        0.0117626886145405,0.5,0.962910049886276,0.037089950113724,
        0.0117626886145405,0.5,0.037089950113724,0.037089950113724,
        0.0515417327839295,0.66540748184964399999,0.66540748184964399999,0.66540748184964399999,
        0.0515417327839295,0.66540748184964399999,0.66540748184964399999,0.33459251815035600001,
        0.0515417327839295,0.33459251815035600001,0.66540748184964399999,0.66540748184964399999,
        0.0515417327839295,0.33459251815035600001,0.66540748184964399999,0.33459251815035600001,
        0.0515417327839295,0.66540748184964399999,0.33459251815035600001,0.66540748184964399999,
        0.0515417327839295,0.66540748184964399999,0.33459251815035600001,0.33459251815035600001,
        0.0515417327839295,0.33459251815035600001,0.33459251815035600001,0.66540748184964399999,
        0.0515417327839295,0.33459251815035600001,0.33459251815035600001,0.33459251815035600001,
        0.028087896845700125,0.86705626437605750001,0.86705626437605750001,0.86705626437605750001,
        0.028087896845700125,0.86705626437605750001,0.86705626437605750001,0.13294373562394249999,
        0.028087896845700125,0.13294373562394249999,0.86705626437605750001,0.86705626437605750001,
        0.028087896845700125,0.13294373562394249999,0.86705626437605750001,0.13294373562394249999,
        0.028087896845700125,0.86705626437605750001,0.13294373562394249999,0.86705626437605750001,
        0.028087896845700125,0.86705626437605750001,0.13294373562394249999,0.13294373562394249999,
        0.028087896845700125,0.13294373562394249999,0.13294373562394249999,0.86705626437605750001,
        0.028087896845700125,0.13294373562394249999,0.13294373562394249999,0.13294373562394249999,
        0.0,
        0.036968449931412875,0.5,0.962910049886276,0.5,
        0.036968449931412875,0.5,0.037089950113724,0.5,
        0.036968449931412875,0.962910049886276,0.5,0.5,
        0.036968449931412875,0.037089950113724,0.5,0.5,
        0.036968449931412875,0.5,0.5,0.962910049886276,
        0.036968449931412875,0.5,0.5,0.037089950113724,
        0.0117626886145405,0.962910049886276,0.962910049886276,0.5,
        0.0117626886145405,0.037089950113724,0.962910049886276,0.5,
        0.0117626886145405,0.962910049886276,0.037089950113724,0.5,
        0.0117626886145405,0.037089950113724,0.037089950113724,0.5,
        0.0117626886145405,0.962910049886276,0.5,0.962910049886276,
        0.0117626886145405,0.962910049886276,0.5,0.037089950113724,
        0.0117626886145405,0.037089950113724,0.5,0.962910049886276,
        0.0117626886145405,0.037089950113724,0.5,0.037089950113724,
        0.0117626886145405,0.5,0.962910049886276,0.962910049886276,
        0.0117626886145405,0.5,0.037089950113724,0.962910049886276,
        0.0117626886145405,0.5,0.962910049886276,0.037089950113724,
        0.0117626886145405,0.5,0.037089950113724,0.037089950113724,
        0.0515417327839295,0.66540748184964399999,0.66540748184964399999,0.66540748184964399999,
        0.0515417327839295,0.66540748184964399999,0.66540748184964399999,0.33459251815035600001,
        0.0515417327839295,0.33459251815035600001,0.66540748184964399999,0.66540748184964399999,
        0.0515417327839295,0.33459251815035600001,0.66540748184964399999,0.33459251815035600001,
        0.0515417327839295,0.66540748184964399999,0.33459251815035600001,0.66540748184964399999,
        0.0515417327839295,0.66540748184964399999,0.33459251815035600001,0.33459251815035600001,
        0.0515417327839295,0.33459251815035600001,0.33459251815035600001,0.66540748184964399999,
        0.0515417327839295,0.33459251815035600001,0.33459251815035600001,0.33459251815035600001,
        0.028087896845700125,0.86705626437605750001,0.86705626437605750001,0.86705626437605750001,
        0.028087896845700125,0.86705626437605750001,0.86705626437605750001,0.13294373562394249999,
        0.028087896845700125,0.13294373562394249999,0.86705626437605750001,0.86705626437605750001,
        0.028087896845700125,0.13294373562394249999,0.86705626437605750001,0.13294373562394249999,
        0.028087896845700125,0.86705626437605750001,0.13294373562394249999,0.86705626437605750001,
        0.028087896845700125,0.86705626437605750001,0.13294373562394249999,0.13294373562394249999,
        0.028087896845700125,0.13294373562394249999,0.13294373562394249999,0.86705626437605750001,
        0.028087896845700125,0.13294373562394249999,0.13294373562394249999,0.13294373562394249999,
        0.0,
    };
    return values + offset[order];
}
template<class TNode> void permutation_if_jac_neg(const Hexa_20 &elem,TNode **nodes) {
    typedef typename TNode::T T;
    T reg0=0.25*nodes[0]->pos[2]; T reg1=0.25*nodes[1]->pos[2]; T reg2=0.25*nodes[0]->pos[1]; T reg3=0.25*nodes[1]->pos[1]; T reg4=reg0-reg1;
    T reg5=reg3+reg2; T reg6=0.25*nodes[2]->pos[1]; T reg7=reg2-reg3; T reg8=reg1+reg0; T reg9=0.25*nodes[2]->pos[2];
    T reg10=reg6+reg5; T reg11=reg8-reg9; T reg12=0.25*nodes[3]->pos[2]; T reg13=reg8+reg9; T reg14=0.25*nodes[1]->pos[0];
    T reg15=0.25*nodes[0]->pos[0]; T reg16=0.25*nodes[3]->pos[1]; T reg17=reg5-reg6; reg7=reg7-reg6; reg4=reg4-reg9;
    reg7=reg16+reg7; reg17=reg17-reg16; T reg18=0.25*nodes[4]->pos[1]; T reg19=0.25*nodes[4]->pos[2]; T reg20=reg14+reg15;
    T reg21=reg13+reg12; T reg22=0.25*nodes[2]->pos[0]; T reg23=reg15-reg14; reg4=reg12+reg4; reg11=reg11-reg12;
    T reg24=reg16+reg10; reg23=reg23-reg22; T reg25=0.25*nodes[3]->pos[0]; reg4=reg19+reg4; reg7=reg18+reg7;
    reg17=reg17+reg18; T reg26=0.25*nodes[5]->pos[1]; T reg27=reg20-reg22; T reg28=reg21-reg19; T reg29=0.25*nodes[5]->pos[2];
    T reg30=reg24-reg18; reg11=reg19+reg11; reg27=reg27-reg25; reg7=reg7-reg26; reg11=reg29+reg11;
    reg28=reg28-reg29; T reg31=0.25*nodes[6]->pos[2]; T reg32=reg22+reg20; T reg33=0.25*nodes[4]->pos[0]; reg23=reg23+reg25;
    reg30=reg30-reg26; reg17=reg17+reg26; reg4=reg4-reg29; T reg34=0.25*nodes[6]->pos[1]; reg27=reg33+reg27;
    reg11=reg11-reg31; reg30=reg30-reg34; T reg35=0.25*nodes[7]->pos[1]; reg17=reg17-reg34; reg4=reg4-reg31;
    T reg36=0.25*nodes[7]->pos[2]; reg28=reg28-reg31; reg23=reg23+reg33; T reg37=0.25*nodes[5]->pos[0]; reg7=reg7-reg34;
    T reg38=reg25+reg32; reg11=reg11-reg36; T reg39=0.5*nodes[8]->pos[1]; reg17=reg17-reg35; reg28=reg28-reg36;
    T reg40=0.5*nodes[8]->pos[2]; T reg41=reg38-reg33; T reg42=0.5*nodes[9]->pos[2]; reg30=reg30-reg35; reg4=reg36+reg4;
    T reg43=0.5*nodes[9]->pos[1]; reg23=reg23-reg37; T reg44=0.25*nodes[6]->pos[0]; reg7=reg35+reg7; reg27=reg37+reg27;
    reg7=reg43+reg7; T reg45=0.5*nodes[11]->pos[2]; T reg46=0.25*nodes[7]->pos[0]; reg23=reg23-reg44; reg4=reg42+reg4;
    reg28=reg28-reg40; T reg47=0.5*nodes[10]->pos[2]; reg30=reg30-reg39; reg39=reg17-reg39; reg17=0.5*nodes[10]->pos[1];
    reg40=reg11-reg40; reg11=0.5*nodes[11]->pos[1]; reg27=reg27-reg44; reg41=reg41-reg37; T reg48=0.5*nodes[13]->pos[1];
    T reg49=0.5*nodes[12]->pos[2]; reg40=reg47+reg40; reg43=reg30-reg43; reg7=reg7-reg11; reg4=reg4-reg45;
    reg27=reg27-reg46; reg30=0.5*nodes[13]->pos[2]; T reg50=0.5*nodes[8]->pos[0]; T reg51=0.5*nodes[12]->pos[1]; reg39=reg39+reg17;
    T reg52=0.5*nodes[9]->pos[0]; reg41=reg41-reg44; reg23=reg23+reg46; reg42=reg28-reg42; reg27=reg27-reg50;
    reg41=reg41-reg46; reg28=0.5*nodes[15]->pos[1]; T reg53=0.5*nodes[10]->pos[0]; reg4=reg30+reg4; reg17=reg43-reg17;
    reg43=0.5*nodes[11]->pos[0]; reg23=reg52+reg23; reg7=reg48+reg7; reg39=reg39-reg51; T reg54=0.5*nodes[15]->pos[2];
    T reg55=0.5*nodes[14]->pos[2]; T reg56=0.5*nodes[14]->pos[1]; reg40=reg40-reg49; reg47=reg42-reg47; reg42=0.5*nodes[13]->pos[0];
    reg4=reg4-reg54; reg7=reg7-reg28; reg23=reg23-reg43; T reg57=0.5*nodes[12]->pos[0]; reg27=reg27+reg53;
    reg45=reg47-reg45; reg50=reg41-reg50; reg11=reg17-reg11; reg40=reg55+reg40; reg39=reg39+reg56;
    reg17=0.5*nodes[16]->pos[1]; reg41=0.5*nodes[16]->pos[2]; reg4=reg4-reg41; reg47=0.5*nodes[14]->pos[0]; reg27=reg27-reg57;
    reg11=reg51+reg11; reg41=reg40-reg41; reg7=reg7-reg17; reg40=0.5*nodes[15]->pos[0]; reg23=reg23+reg42;
    reg52=reg50-reg52; reg50=0.5*nodes[17]->pos[2]; reg17=reg39-reg17; reg39=0.5*nodes[17]->pos[1]; reg49=reg45+reg49;
    reg23=reg23-reg40; reg45=0.5*nodes[18]->pos[2]; reg41=reg41-reg50; reg27=reg27+reg47; reg30=reg49+reg30;
    reg49=0.5*nodes[16]->pos[0]; reg7=reg39+reg7; reg53=reg52-reg53; reg4=reg50+reg4; reg48=reg11+reg48;
    reg39=reg17-reg39; reg11=0.5*nodes[18]->pos[1]; reg7=reg11+reg7; reg27=reg27-reg49; reg49=reg23-reg49;
    reg17=0.5*nodes[17]->pos[0]; reg43=reg53-reg43; reg4=reg45+reg4; reg48=reg56+reg48; reg23=0.5*nodes[19]->pos[2];
    reg45=reg41+reg45; reg11=reg39+reg11; reg39=0.5*nodes[19]->pos[1]; reg55=reg30+reg55; reg4=reg4-reg23;
    reg43=reg57+reg43; reg7=reg7-reg39; reg49=reg49+reg17; reg17=reg27-reg17; reg27=0.5*nodes[18]->pos[0];
    reg28=reg48+reg28; reg39=reg11+reg39; reg54=reg55+reg54; reg23=reg45+reg23; reg43=reg42+reg43;
    reg49=reg49+reg27; reg11=0.5*nodes[19]->pos[0]; reg30=reg39*reg54; reg41=reg28*reg4; reg28=reg28*reg23;
    reg17=reg27+reg17; reg54=reg54*reg7; reg41=reg54-reg41; reg49=reg49-reg11; reg28=reg30-reg28;
    reg17=reg11+reg17; reg43=reg47+reg43; reg7=reg23*reg7; reg4=reg39*reg4; reg41=reg17*reg41;
    reg28=reg49*reg28; reg43=reg40+reg43; reg4=reg7-reg4; reg4=reg43*reg4; reg41=reg28-reg41;
    T det_jac=reg41+reg4;

    if ( det_jac < 0 ) {
        TNode *tmp[] = {nodes[0],nodes[3],nodes[2],nodes[1],nodes[4],nodes[7],nodes[6],nodes[5],nodes[11],nodes[10],nodes[9],nodes[8],nodes[15],nodes[14],nodes[13],nodes[12],nodes[16],nodes[19],nodes[18],nodes[17]};
        for(unsigned i=0;i<20;++i) nodes[i] = tmp[i];
    }
}
template<class PosNodes,class Pvec,class TVI> void get_var_inter_linear(const Hexa_20 &elem,const PosNodes &pos_nodes,const Pvec &pos,TVI &var_inter) {
typedef typename Pvec::template SubType<0>::T T;
    T reg0=2*var_inter[0]; T reg1=2*var_inter[1]; reg0=reg0-1; reg1=reg1-1; T reg2=2*var_inter[2];
    T reg3=1+reg0; T reg4=1-reg0; T reg5=0.125*reg3; T reg6=reg0-reg1; T reg7=reg0+reg1;
    T reg8=1-reg1; T reg9=0.125*reg4; reg2=reg2-1; T reg10=1-reg2; T reg11=reg7+reg2;
    T reg12=reg9*reg8; T reg13=reg6-reg2; T reg14=reg5*reg8; T reg15=1+reg1; T reg16=0.25*reg3;
    T reg17=0.25*reg4; T reg18=reg1-reg0; T reg19=2*reg14; T reg20=reg12*reg10; T reg21=reg7-reg2;
    T reg22=2*reg12; reg5=reg15*reg5; reg13=reg13-2; T reg23=reg10*reg16; T reg24=2+reg11;
    T reg25=reg10*reg14; T reg26=reg10*reg17; T reg27=2*reg5; T reg28=reg13*reg19; T reg29=reg24*reg22;
    T reg30=reg24*reg26; T reg31=reg13*reg23; T reg32=reg10*reg5; reg21=reg21-2; T reg33=2*reg20;
    T reg34=2*reg25; T reg35=0.25*reg8; T reg36=reg18-reg2; reg9=reg15*reg9; reg36=reg36-2;
    T reg37=1+reg2; reg7=reg2-reg7; T reg38=reg9*reg10; T reg39=0.25*reg15; T reg40=2*reg32;
    T reg41=reg21*reg23; reg31=reg34+reg31; reg28=reg34+reg28; reg29=reg33-reg29; T reg42=reg21*reg27;
    T reg43=2*reg9; T reg44=reg10*reg35; reg30=reg33-reg30; T reg45=pos_nodes[0][1]*reg30; T reg46=reg31*pos_nodes[1][2];
    T reg47=reg28*pos_nodes[1][1]; T reg48=reg31*pos_nodes[1][0]; T reg49=pos_nodes[0][1]*reg29; T reg50=reg29*pos_nodes[0][2]; T reg51=reg28*pos_nodes[1][2];
    T reg52=reg30*pos_nodes[0][2]; T reg53=reg36*reg43; T reg54=pos_nodes[0][0]*reg30; T reg55=reg31*pos_nodes[1][1]; reg42=reg40+reg42;
    T reg56=reg13*reg44; T reg57=reg37*reg17; T reg58=reg24*reg44; T reg59=reg36*reg26; T reg60=2*reg38;
    reg41=reg40+reg41; T reg61=reg10*reg39; reg6=reg6+reg2; T reg62=reg28*pos_nodes[1][0]; reg7=reg7-2;
    reg12=reg37*reg12; T reg63=pos_nodes[0][0]*reg29; T reg64=reg41*pos_nodes[2][1]; reg58=reg33-reg58; reg33=2*reg12;
    reg52=reg46+reg52; reg56=reg34+reg56; reg34=reg41*pos_nodes[2][2]; reg45=reg55+reg45; reg54=reg48+reg54;
    reg46=reg21*reg61; reg48=reg42*pos_nodes[2][1]; reg49=reg47+reg49; reg47=reg37*reg16; reg55=reg7*reg57;
    reg59=reg60+reg59; reg24=reg20*reg24; reg13=reg25*reg13; reg6=reg6-2; reg14=reg37*reg14;
    reg20=reg42*pos_nodes[2][0]; reg63=reg62+reg63; reg25=reg41*pos_nodes[2][0]; reg62=reg7*reg22; reg53=reg60+reg53;
    reg50=reg51+reg50; reg51=reg42*pos_nodes[2][2]; T reg65=reg37*reg35; T reg66=reg6*reg19; reg62=reg33+reg62;
    T reg67=reg6*reg47; T reg68=2*reg14; T reg69=pos_nodes[0][1]*reg58; reg55=reg33+reg55; reg54=reg25-reg54;
    reg25=reg56*pos_nodes[1][1]; T reg70=reg24*pos_nodes[0][0]; T reg71=reg13*pos_nodes[1][0]; T reg72=pos_nodes[3][1]*reg53; reg49=reg48+reg49;
    reg45=reg64-reg45; reg48=pos_nodes[0][0]*reg58; reg64=reg56*pos_nodes[1][0]; reg63=reg20+reg63; reg20=pos_nodes[3][0]*reg53;
    T reg73=pos_nodes[3][1]*reg59; reg21=reg32*reg21; reg5=reg37*reg5; reg11=reg11-2; reg32=pos_nodes[3][2]*reg53;
    T reg74=reg24*pos_nodes[0][1]; T reg75=reg13*pos_nodes[1][1]; reg18=reg18+reg2; reg50=reg51+reg50; reg51=pow(reg0,2);
    reg46=reg40+reg46; reg40=pos_nodes[3][0]*reg59; reg52=reg34-reg52; reg34=reg36*reg61; T reg76=pos_nodes[3][2]*reg59;
    reg70=reg71-reg70; reg71=pos_nodes[4][2]*reg62; T reg77=reg46*pos_nodes[2][1]; reg69=reg25-reg69; reg25=reg21*pos_nodes[2][0];
    T reg78=pos_nodes[4][2]*reg55; reg32=reg50+reg32; reg20=reg63+reg20; reg36=reg38*reg36; reg9=reg9*reg37;
    reg18=reg18-2; reg51=1-reg51; reg38=pow(reg1,2); reg50=reg13*pos_nodes[1][2]; reg67=reg68+reg67;
    reg63=reg11*reg47; T reg79=pos_nodes[4][0]*reg62; T reg80=reg24*pos_nodes[0][2]; T reg81=reg11*reg27; reg66=reg68+reg66;
    T reg82=pos_nodes[4][1]*reg62; reg40=reg54+reg40; reg54=pos_nodes[4][0]*reg55; reg74=reg75-reg74; reg75=reg21*pos_nodes[2][1];
    reg72=reg49+reg72; reg49=pos_nodes[4][1]*reg55; reg73=reg45+reg73; reg45=2*reg5; T reg83=reg56*pos_nodes[1][2];
    T reg84=reg58*pos_nodes[0][2]; reg48=reg64-reg48; reg76=reg52+reg76; reg34=reg60+reg34; reg52=reg7*reg65;
    reg60=reg46*pos_nodes[2][0]; reg80=reg50-reg80; reg50=reg37*reg39; reg74=reg75+reg74; reg64=reg6*reg65;
    reg81=reg45+reg81; reg75=reg18*reg43; reg72=reg82-reg72; reg82=pos_nodes[5][1]*reg66; T reg85=0.25*reg51;
    T reg86=2*reg9; reg52=reg33+reg52; reg38=1-reg38; reg33=reg21*pos_nodes[2][2]; T reg87=reg18*reg57;
    reg63=reg45+reg63; T reg88=pos_nodes[5][0]*reg67; T reg89=pos_nodes[3][1]*reg34; reg69=reg77+reg69; reg54=reg40-reg54;
    reg78=reg76-reg78; reg40=pos_nodes[5][2]*reg67; reg84=reg83-reg84; reg76=pos_nodes[3][0]*reg34; reg60=reg48+reg60;
    reg48=pos_nodes[3][0]*reg36; reg70=reg25+reg70; reg25=reg46*pos_nodes[2][2]; reg77=pos_nodes[5][0]*reg66; reg20=reg79-reg20;
    reg32=reg71-reg32; reg71=pos_nodes[5][2]*reg66; reg49=reg73-reg49; reg73=pos_nodes[5][1]*reg67; reg7=reg12*reg7;
    reg12=pos_nodes[3][1]*reg36; reg79=pos_nodes[3][2]*reg36; reg80=reg33+reg80; reg33=pos_nodes[6][2]*reg81; reg71=reg32+reg71;
    reg32=pos_nodes[6][2]*reg63; reg40=reg78-reg40; reg78=pos_nodes[3][2]*reg34; reg84=reg25+reg84; reg25=pos_nodes[4][1]*reg7;
    reg12=reg74+reg12; reg74=0.25*reg38; reg83=pos_nodes[6][1]*reg81; reg82=reg72+reg82; reg72=pos_nodes[6][1]*reg63;
    reg73=reg49-reg73; reg49=pos_nodes[4][1]*reg52; reg89=reg69-reg89; reg69=pos_nodes[4][0]*reg7; reg48=reg70+reg48;
    reg70=pos_nodes[6][0]*reg81; reg77=reg20+reg77; reg75=reg86+reg75; reg20=reg85*reg8; reg87=reg86+reg87;
    T reg90=reg11*reg50; reg51=0.5*reg51; reg64=reg68+reg64; reg88=reg54-reg88; reg54=pos_nodes[6][0]*reg63;
    reg76=reg60-reg76; reg60=pos_nodes[4][0]*reg52; reg6=reg14*reg6; reg14=reg18*reg50; reg49=reg89-reg49;
    reg68=pos_nodes[4][2]*reg52; reg78=reg84-reg78; reg84=pos_nodes[5][0]*reg6; reg69=reg48+reg69; reg83=reg82+reg83;
    reg48=reg75*pos_nodes[7][1]; reg82=reg3*reg1; reg89=reg10*reg51; T reg91=reg75*pos_nodes[7][2]; reg33=reg71+reg33;
    reg45=reg90+reg45; reg25=reg12+reg25; reg12=pos_nodes[5][1]*reg6; reg71=pos_nodes[7][0]*reg75; reg11=reg5*reg11;
    reg70=reg77+reg70; reg5=pos_nodes[4][2]*reg7; reg60=reg76-reg60; reg76=pos_nodes[5][0]*reg64; reg79=reg80+reg79;
    reg77=reg3*reg74; reg80=2*reg20; reg72=reg73+reg72; reg73=reg87*pos_nodes[7][1]; reg90=reg87*pos_nodes[7][2];
    reg32=reg40+reg32; reg40=pos_nodes[7][0]*reg87; reg54=reg88+reg54; reg88=pos_nodes[5][1]*reg64; reg90=reg32+reg90;
    reg32=pos_nodes[8][2]*reg89; reg12=reg25+reg12; reg25=pos_nodes[6][1]*reg11; T reg92=pos_nodes[5][2]*reg64; reg68=reg78-reg68;
    reg78=pos_nodes[8][1]*reg80; reg48=reg83+reg48; reg84=reg69+reg84; reg69=pos_nodes[6][0]*reg11; reg14=reg86+reg14;
    reg83=reg0*reg8; reg86=pos_nodes[8][1]*reg89; reg73=reg72+reg73; reg72=pos_nodes[6][0]*reg45; reg88=reg49+reg88;
    reg76=reg60+reg76; reg49=pos_nodes[6][1]*reg45; reg60=pos_nodes[8][0]*reg80; reg71=reg70+reg71; reg18=reg9*reg18;
    reg9=reg10*reg82; reg70=pos_nodes[8][2]*reg80; reg91=reg33+reg91; reg33=pos_nodes[8][0]*reg89; reg40=reg54+reg40;
    reg54=pos_nodes[5][2]*reg6; reg5=reg79+reg5; reg85=reg85*reg15; reg79=2*reg77; T reg93=reg10*reg83;
    reg74=reg4*reg74; T reg94=2*reg85; T reg95=pos_nodes[7][0]*reg18; reg69=reg84+reg69; reg38=0.5*reg38;
    reg84=pos_nodes[9][1]*reg9; reg86=reg73-reg86; reg33=reg40-reg33; reg40=pos_nodes[9][0]*reg9; reg54=reg5+reg54;
    reg5=pos_nodes[6][2]*reg11; reg73=reg14*pos_nodes[7][1]; reg49=reg88+reg49; reg88=reg10*reg20; reg76=reg72+reg76;
    reg72=pos_nodes[7][0]*reg14; reg60=reg71-reg60; reg71=pos_nodes[9][0]*reg79; reg32=reg90-reg32; reg90=pos_nodes[9][2]*reg9;
    T reg96=pos_nodes[6][2]*reg45; reg92=reg68+reg92; reg68=reg18*pos_nodes[7][1]; reg25=reg12+reg25; reg12=pos_nodes[9][2]*reg79;
    reg70=reg91-reg70; reg91=reg1*reg4; reg78=reg48-reg78; reg48=pos_nodes[9][1]*reg79; reg12=reg70-reg12;
    reg70=pos_nodes[10][2]*reg94; T reg97=reg10*reg38; reg90=reg32-reg90; reg32=reg14*pos_nodes[7][2]; reg96=reg92+reg96;
    reg92=reg15*reg0; reg73=reg49-reg73; reg49=pos_nodes[8][1]*reg93; T reg98=reg18*pos_nodes[7][2]; reg5=reg54+reg5;
    reg54=pos_nodes[10][1]*reg89; T reg99=pos_nodes[10][2]*reg89; T reg100=reg77*reg10; T reg101=pos_nodes[8][1]*reg88; reg68=reg25+reg68;
    reg84=reg86-reg84; reg48=reg78-reg48; reg25=pos_nodes[10][1]*reg94; reg40=reg33-reg40; reg33=pos_nodes[10][0]*reg89;
    reg78=2*reg74; reg86=reg10*reg91; reg71=reg60-reg71; reg60=pos_nodes[10][0]*reg94; reg95=reg69+reg95;
    reg69=pos_nodes[8][0]*reg88; reg72=reg76-reg72; reg76=pos_nodes[8][0]*reg93; T reg102=reg37*reg51; T reg103=pos_nodes[9][0]*reg97;
    T reg104=pos_nodes[11][2]*reg86; reg99=reg90+reg99; reg60=reg71-reg60; reg71=pos_nodes[11][0]*reg78; reg90=pos_nodes[8][2]*reg93;
    reg32=reg96-reg32; reg54=reg84+reg54; reg84=pos_nodes[11][1]*reg86; reg96=pos_nodes[9][1]*reg100; reg101=reg68+reg101;
    reg68=pos_nodes[11][1]*reg78; reg25=reg48-reg25; reg69=reg95+reg69; reg48=pos_nodes[9][0]*reg100; reg95=reg10*reg92;
    T reg105=pos_nodes[8][2]*reg88; T reg106=pow(reg2,2); reg98=reg5+reg98; reg5=reg85*reg10; reg76=reg72-reg76;
    reg72=pos_nodes[11][0]*reg86; reg33=reg40+reg33; reg40=pos_nodes[9][1]*reg97; T reg107=pos_nodes[11][2]*reg78; reg70=reg12-reg70;
    reg49=reg73-reg49; reg72=reg33-reg72; reg68=reg25-reg68; reg48=reg69+reg48; reg12=pos_nodes[12][1]*reg80;
    reg25=reg5*pos_nodes[10][0]; reg33=pos_nodes[12][0]*reg102; reg106=1-reg106; reg96=reg101+reg96; reg69=reg5*pos_nodes[10][1];
    reg73=reg100*pos_nodes[9][2]; reg101=pos_nodes[12][0]*reg80; reg105=reg98+reg105; reg90=reg32-reg90; reg32=pos_nodes[9][2]*reg97;
    reg71=reg60-reg71; reg10=reg74*reg10; reg60=pos_nodes[10][0]*reg95; reg103=reg76+reg103; reg76=pos_nodes[12][2]*reg80;
    reg107=reg70-reg107; reg104=reg99-reg104; reg70=pos_nodes[12][2]*reg102; reg98=reg37*reg82; reg99=pos_nodes[10][1]*reg95;
    reg84=reg54-reg84; reg40=reg49+reg40; reg49=pos_nodes[12][1]*reg102; reg54=reg10*pos_nodes[11][1]; reg69=reg96+reg69;
    reg49=reg84-reg49; reg12=reg68+reg12; reg68=pos_nodes[13][1]*reg79; reg84=pos_nodes[13][1]*reg98; reg96=0.25*reg106;
    reg101=reg71+reg101; reg71=pos_nodes[13][0]*reg79; T reg108=pos_nodes[13][2]*reg79; reg76=reg107+reg76; reg20=reg37*reg20;
    reg107=pos_nodes[13][2]*reg98; reg99=reg40-reg99; reg40=pos_nodes[11][1]*reg97; reg70=reg104-reg70; reg104=reg5*pos_nodes[10][2];
    reg73=reg105+reg73; reg105=reg37*reg83; T reg109=reg10*pos_nodes[11][0]; reg25=reg48+reg25; reg48=pos_nodes[10][2]*reg95;
    reg32=reg90+reg32; reg60=reg103-reg60; reg90=pos_nodes[11][0]*reg97; reg103=pos_nodes[13][0]*reg98; reg33=reg72-reg33;
    reg72=reg10*pos_nodes[11][2]; T reg110=pos_nodes[14][2]*reg102; T reg111=reg2*reg4; reg104=reg73+reg104; reg103=reg33-reg103;
    reg107=reg70-reg107; reg33=reg20*pos_nodes[12][1]; reg54=reg69+reg54; reg69=pos_nodes[14][0]*reg102; reg70=pos_nodes[12][1]*reg105;
    reg4=reg4*reg96; reg40=reg99-reg40; reg73=pos_nodes[12][0]*reg105; reg90=reg60-reg90; reg60=reg20*pos_nodes[12][0];
    reg99=pos_nodes[14][1]*reg102; reg84=reg49-reg84; reg68=reg12+reg68; reg12=pos_nodes[14][2]*reg94; reg49=pos_nodes[14][1]*reg94;
    reg109=reg25+reg109; reg108=reg76+reg108; reg25=reg37*reg38; reg76=reg37*reg91; reg48=reg32-reg48;
    reg71=reg101+reg71; reg32=pos_nodes[14][0]*reg94; reg101=pos_nodes[11][2]*reg97; reg77=reg37*reg77; reg101=reg48-reg101;
    reg48=pos_nodes[12][2]*reg105; T reg112=pos_nodes[13][0]*reg77; reg60=reg109+reg60; reg110=reg107+reg110; reg107=pos_nodes[15][2]*reg76;
    reg109=pos_nodes[15][0]*reg78; reg32=reg71+reg32; reg71=reg37*reg92; T reg113=pos_nodes[15][2]*reg78; reg12=reg108+reg12;
    reg73=reg90-reg73; reg90=pos_nodes[13][0]*reg25; reg108=pos_nodes[15][1]*reg76; reg99=reg84+reg99; reg49=reg68+reg49;
    reg68=pos_nodes[15][1]*reg78; reg85=reg37*reg85; reg96=reg3*reg96; reg70=reg40-reg70; reg40=reg8*reg111;
    reg3=reg3*reg2; reg69=reg103+reg69; reg84=reg20*pos_nodes[12][2]; reg33=reg54+reg33; reg54=pos_nodes[13][1]*reg77;
    reg103=pos_nodes[13][1]*reg25; T reg114=2*reg4; T reg115=pos_nodes[15][0]*reg76; reg72=reg104+reg72; reg48=reg101-reg48;
    reg101=pos_nodes[13][2]*reg25; reg107=reg110-reg107; reg104=pos_nodes[14][1]*reg71; reg103=reg70+reg103; reg70=pos_nodes[14][0]*reg85;
    reg106=0.5*reg106; reg115=reg69-reg115; reg69=pos_nodes[16][2]*reg40; reg113=reg12+reg113; reg12=pos_nodes[16][1]*reg114;
    reg108=reg99-reg108; reg90=reg73+reg90; reg73=pos_nodes[14][0]*reg71; reg68=reg49+reg68; reg49=pos_nodes[16][1]*reg40;
    reg74=reg37*reg74; reg37=reg8*reg3; reg99=pos_nodes[13][2]*reg77; reg84=reg72+reg84; reg72=pos_nodes[16][0]*reg114;
    reg110=pos_nodes[16][0]*reg40; reg54=reg33+reg54; reg33=pos_nodes[14][1]*reg85; T reg116=2*reg96; T reg117=pos_nodes[16][2]*reg114;
    reg109=reg32+reg109; reg112=reg60+reg112; reg72=reg115-reg72; reg32=pos_nodes[15][0]*reg25; reg60=pos_nodes[17][0]*reg116;
    reg117=reg107-reg117; reg107=pos_nodes[17][2]*reg116; reg115=reg8*reg4; T reg118=pos_nodes[15][1]*reg25; T reg119=reg15*reg3;
    reg69=reg113-reg69; reg113=pos_nodes[17][2]*reg37; T reg120=pos_nodes[17][1]*reg116; reg12=reg108-reg12; reg49=reg68-reg49;
    reg68=pos_nodes[17][1]*reg37; reg108=pos_nodes[14][2]*reg85; reg99=reg84+reg99; reg84=pos_nodes[17][0]*reg37; reg110=reg109-reg110;
    reg33=reg54+reg33; reg54=pos_nodes[15][1]*reg74; reg70=reg112+reg70; reg109=pos_nodes[15][0]*reg74; reg104=reg103-reg104;
    reg103=reg8*reg106; reg112=pos_nodes[14][2]*reg71; reg73=reg90-reg73; reg101=reg48+reg101; reg48=pos_nodes[15][2]*reg74;
    reg90=pos_nodes[16][0]*reg115; reg109=reg70+reg109; reg32=reg73-reg32; reg68=reg49-reg68; reg113=reg69-reg113;
    reg49=pos_nodes[18][2]*reg119; reg69=pos_nodes[18][1]*reg119; reg108=reg99+reg108; reg120=reg12-reg120; reg12=pos_nodes[18][1]*reg116;
    reg70=pos_nodes[16][1]*reg115; reg54=reg33+reg54; reg107=reg117-reg107; reg33=pos_nodes[18][2]*reg116; reg60=reg72-reg60;
    reg72=pos_nodes[18][0]*reg116; reg73=pos_nodes[16][0]*reg103; reg112=reg101-reg112; reg118=reg104-reg118; reg99=pos_nodes[16][1]*reg103;
    reg101=pos_nodes[15][2]*reg25; reg84=reg110-reg84; reg104=reg15*reg111; reg110=pos_nodes[18][0]*reg119; reg8=reg8*reg96;
    reg49=reg113-reg49; reg113=pos_nodes[19][2]*reg104; reg117=pos_nodes[19][0]*reg114; reg72=reg60+reg72; reg48=reg108+reg48;
    reg60=pos_nodes[16][2]*reg115; reg12=reg120+reg12; reg108=pos_nodes[19][1]*reg114; reg69=reg68-reg69; reg68=pos_nodes[19][1]*reg104;
    reg120=pos_nodes[19][0]*reg104; reg110=reg84-reg110; reg70=reg54+reg70; reg54=pos_nodes[17][1]*reg8; reg101=reg112-reg101;
    reg84=pos_nodes[16][2]*reg103; reg96=reg15*reg96; reg112=reg15*reg106; reg90=reg109+reg90; reg109=pos_nodes[17][0]*reg8;
    reg99=reg118-reg99; reg33=reg107+reg33; reg107=pos_nodes[19][2]*reg114; reg118=pos_nodes[17][1]*reg103; reg73=reg32-reg73;
    reg32=pos_nodes[17][0]*reg103; T reg121=pos_nodes[17][2]*reg8; reg60=reg48+reg60; reg108=reg12+reg108; reg118=reg99+reg118;
    reg12=pos_nodes[18][1]*reg112; reg68=reg69-reg68; reg120=reg110-reg120; reg113=reg49-reg113; reg48=pos_nodes[18][0]*reg112;
    reg32=reg73+reg32; reg54=reg70+reg54; reg49=pos_nodes[18][1]*reg96; reg117=reg72+reg117; reg84=reg101-reg84;
    reg69=pos_nodes[17][2]*reg103; reg4=reg15*reg4; reg107=reg33+reg107; reg15=pos_nodes[18][0]*reg96; reg109=reg90+reg109;
    reg33=pos_nodes[19][0]*reg4; reg70=reg120*reg107; reg72=reg117*reg113; reg73=reg68*reg107; reg90=reg108*reg113;
    reg48=reg32+reg48; reg32=pos_nodes[19][0]*reg112; reg15=reg109+reg15; reg99=pos_nodes[18][2]*reg112; reg69=reg84+reg69;
    reg84=pos_nodes[18][2]*reg96; reg101=pos_nodes[19][1]*reg4; reg49=reg54+reg49; reg54=pos_nodes[19][1]*reg112; reg12=reg118+reg12;
    reg121=reg60+reg121; reg70=reg72-reg70; reg32=reg48-reg32; reg84=reg121+reg84; reg48=reg120*reg108;
    reg54=reg12-reg54; reg12=reg117*reg68; reg73=reg90-reg73; reg60=pos_nodes[19][2]*reg4; reg33=reg15+reg33;
    reg15=pos_nodes[19][2]*reg112; reg99=reg69+reg99; reg101=reg49+reg101; reg33=pos[0]-reg33; reg49=var_inter[0]*reg32;
    reg48=reg12-reg48; reg69=var_inter[0]*reg54; reg109=reg54*reg70; reg101=pos[1]-reg101; reg110=reg32*reg73;
    reg15=reg99-reg15; reg60=reg84+reg60; reg84=reg117*reg15; reg99=reg32*reg107; reg118=reg120*reg15;
    reg121=reg32*reg113; reg60=pos[2]-reg60; T reg122=var_inter[1]*reg117; reg49=reg33+reg49; reg33=var_inter[1]*reg108;
    reg69=reg101+reg69; reg101=var_inter[0]*reg15; reg110=reg109-reg110; reg109=reg15*reg48; T reg123=reg54*reg113;
    T reg124=reg108*reg15; T reg125=reg54*reg107; T reg126=reg68*reg15; T reg127=var_inter[2]*reg120; reg124=reg125-reg124;
    T reg128=var_inter[2]*reg68; reg49=reg122+reg49; reg69=reg33+reg69; reg126=reg123-reg126; reg33=var_inter[1]*reg107;
    reg101=reg60+reg101; reg118=reg121-reg118; reg109=reg110-reg109; reg84=reg99-reg84; reg60=reg32*reg68;
    reg110=reg120*reg54; reg122=reg32*reg108; T reg129=reg117*reg54; reg84=reg84/reg109; reg124=reg124/reg109;
    reg49=reg127+reg49; reg126=reg126/reg109; reg70=reg70/reg109; reg127=var_inter[2]*reg113; reg110=reg60-reg110;
    reg69=reg128+reg69; reg101=reg33+reg101; reg118=reg118/reg109; reg129=reg122-reg129; reg73=reg73/reg109;
    reg70=reg69*reg70; reg126=reg49*reg126; reg118=reg69*reg118; reg124=reg49*reg124; reg110=reg110/reg109;
    reg84=reg69*reg84; reg129=reg129/reg109; reg101=reg127+reg101; reg109=reg48/reg109; reg73=reg49*reg73;
    reg124=reg84-reg124; reg129=reg101*reg129; reg118=reg126-reg118; reg110=reg101*reg110; reg73=reg70-reg73;
    reg109=reg101*reg109; var_inter[2]=reg124-reg129; var_inter[1]=reg110+reg118; var_inter[0]=reg73-reg109;

}
template<class PosNodes,class Pvec,class TVI> void get_var_inter(const Hexa_20 &elem,const PosNodes &pos_nodes,const Pvec &pos,TVI &var_inter) {
typedef typename Pvec::template SubType<0>::T T;
    T reg0=2*var_inter[0]; reg0=reg0-1; T reg1=2*var_inter[1]; T reg2=2*var_inter[2]; T reg3=1-reg0;
    reg1=reg1-1; T reg4=1+reg0; T reg5=0.125*reg4; T reg6=1-reg1; T reg7=0.125*reg3;
    T reg8=reg0-reg1; T reg9=reg1+reg0; reg2=reg2-1; T reg10=1+reg1; T reg11=0.25*reg4;
    T reg12=0.25*reg3; T reg13=reg5*reg6; T reg14=reg8-reg2; T reg15=reg7*reg6; T reg16=1-reg2;
    T reg17=reg2+reg9; T reg18=2*reg13; T reg19=2+reg17; T reg20=2*reg15; T reg21=reg15*reg16;
    T reg22=reg9-reg2; T reg23=reg1-reg0; reg5=reg10*reg5; T reg24=reg16*reg11; reg14=reg14-2;
    T reg25=reg13*reg16; T reg26=reg16*reg12; T reg27=reg19*reg20; T reg28=reg14*reg18; T reg29=reg5*reg16;
    T reg30=2*reg5; T reg31=2*reg21; T reg32=reg19*reg26; T reg33=2*reg25; T reg34=reg14*reg24;
    T reg35=reg23-reg2; T reg36=0.25*reg6; reg22=reg22-2; reg7=reg10*reg7; reg9=reg2-reg9;
    reg27=reg31-reg27; T reg37=reg22*reg30; T reg38=2*reg7; reg35=reg35-2; T reg39=2*reg29;
    T reg40=0.25*reg10; T reg41=1+reg2; T reg42=reg16*reg36; reg28=reg33+reg28; T reg43=reg7*reg16;
    reg34=reg33+reg34; T reg44=reg22*reg24; reg32=reg31-reg32; T reg45=2*reg43; T reg46=reg16*reg40;
    T reg47=reg19*reg42; T reg48=pos_nodes[1][2]*reg34; T reg49=pos_nodes[0][2]*reg32; T reg50=reg14*reg42; reg15=reg15*reg41;
    T reg51=pos_nodes[0][1]*reg32; T reg52=reg41*reg12; T reg53=pos_nodes[1][2]*reg28; reg37=reg39+reg37; T reg54=pos_nodes[1][1]*reg34;
    T reg55=reg35*reg38; T reg56=pos_nodes[0][2]*reg27; T reg57=pos_nodes[0][0]*reg32; reg8=reg8+reg2; T reg58=reg35*reg26;
    T reg59=pos_nodes[1][0]*reg34; T reg60=pos_nodes[1][0]*reg28; T reg61=pos_nodes[0][0]*reg27; reg44=reg39+reg44; reg9=reg9-2;
    T reg62=pos_nodes[1][1]*reg28; T reg63=pos_nodes[0][1]*reg27; T reg64=pos_nodes[2][2]*reg37; reg56=reg53+reg56; reg53=pos_nodes[2][1]*reg44;
    reg51=reg54+reg51; reg54=pos_nodes[2][0]*reg44; T reg65=2*reg15; reg33=reg50+reg33; reg47=reg31-reg47;
    reg31=reg22*reg46; reg50=pos_nodes[2][0]*reg37; reg61=reg60+reg61; reg55=reg45+reg55; reg60=reg9*reg20;
    reg57=reg59+reg57; reg58=reg45+reg58; reg59=reg9*reg52; T reg66=reg41*reg11; reg21=reg19*reg21;
    reg19=pos_nodes[2][1]*reg37; reg63=reg62+reg63; reg49=reg48+reg49; reg25=reg14*reg25; reg14=pos_nodes[2][2]*reg44;
    reg8=reg8-2; reg13=reg13*reg41; reg50=reg61+reg50; reg48=reg8*reg18; reg61=pow(reg0,2);
    reg62=pos_nodes[3][0]*reg55; T reg67=pos_nodes[3][1]*reg55; reg49=reg14-reg49; reg60=reg65+reg60; reg14=pos_nodes[3][2]*reg58;
    T reg68=pos_nodes[0][1]*reg21; T reg69=reg41*reg36; T reg70=2*reg13; T reg71=pos_nodes[1][0]*reg33; T reg72=pos_nodes[0][0]*reg47;
    T reg73=pos_nodes[0][0]*reg21; reg5=reg5*reg41; T reg74=pos_nodes[3][1]*reg58; reg51=reg53-reg51; reg17=reg17-2;
    reg53=reg25*pos_nodes[1][0]; reg23=reg2+reg23; reg59=reg65+reg59; reg64=reg56+reg64; reg56=reg35*reg46;
    T reg75=reg8*reg66; T reg76=reg25*pos_nodes[1][1]; reg22=reg29*reg22; reg57=reg54-reg57; reg29=pos_nodes[3][0]*reg58;
    reg54=pos_nodes[0][1]*reg47; T reg77=pos_nodes[1][1]*reg33; T reg78=pos_nodes[3][2]*reg55; reg31=reg39+reg31; reg19=reg63+reg19;
    reg62=reg50+reg62; reg68=reg76-reg68; reg39=reg22*pos_nodes[2][1]; reg7=reg7*reg41; reg50=pow(reg1,2);
    reg23=reg23-2; reg75=reg70+reg75; reg63=reg17*reg66; reg29=reg57+reg29; reg57=pos_nodes[4][0]*reg59;
    reg76=reg25*pos_nodes[1][2]; T reg79=reg21*pos_nodes[0][2]; T reg80=pos_nodes[0][2]*reg47; T reg81=reg17*reg30; T reg82=pos_nodes[1][2]*reg33;
    reg48=reg70+reg48; reg14=reg49+reg14; reg49=pos_nodes[4][2]*reg59; T reg83=pos_nodes[4][0]*reg60; T reg84=pos_nodes[2][0]*reg31;
    reg72=reg71-reg72; reg35=reg43*reg35; reg43=2*reg5; reg61=1-reg61; reg67=reg19+reg67;
    reg78=reg64+reg78; reg54=reg77-reg54; reg19=pos_nodes[2][1]*reg31; reg64=pos_nodes[4][1]*reg60; reg71=pos_nodes[4][2]*reg60;
    reg77=reg22*pos_nodes[2][0]; T reg85=reg9*reg69; reg73=reg53-reg73; reg53=pos_nodes[4][1]*reg59; reg74=reg51+reg74;
    reg56=reg45+reg56; reg81=reg43+reg81; reg67=reg64-reg67; reg45=reg22*pos_nodes[2][2]; reg79=reg76-reg79;
    reg50=1-reg50; reg51=0.25*reg61; reg64=pos_nodes[5][1]*reg48; reg76=pos_nodes[5][0]*reg75; reg57=reg29-reg57;
    reg53=reg74-reg53; reg29=reg23*reg52; reg74=pos_nodes[5][2]*reg48; T reg86=pos_nodes[5][1]*reg75; reg19=reg54+reg19;
    reg80=reg82-reg80; reg54=pos_nodes[3][1]*reg56; reg63=reg43+reg63; reg82=pos_nodes[2][2]*reg31; reg15=reg9*reg15;
    reg9=2*reg7; reg62=reg83-reg62; reg65=reg85+reg65; reg83=reg8*reg69; reg84=reg72+reg84;
    reg72=pos_nodes[3][0]*reg56; reg39=reg68+reg39; reg68=pos_nodes[5][0]*reg48; reg85=reg23*reg38; T reg87=pos_nodes[3][1]*reg35;
    T reg88=pos_nodes[5][2]*reg75; reg49=reg14-reg49; reg78=reg71-reg78; reg77=reg73+reg77; reg14=reg41*reg40;
    reg71=pos_nodes[3][0]*reg35; reg73=pos_nodes[6][1]*reg63; reg67=reg64+reg67; reg64=pos_nodes[6][1]*reg81; reg86=reg53-reg86;
    reg53=reg15*pos_nodes[4][1]; reg78=reg74+reg78; reg62=reg68+reg62; reg68=reg15*pos_nodes[4][0]; reg74=pos_nodes[6][2]*reg63;
    T reg89=pos_nodes[6][0]*reg63; reg71=reg77+reg71; reg77=pos_nodes[6][2]*reg81; T reg90=pos_nodes[3][2]*reg56; reg82=reg80+reg82;
    reg76=reg57-reg76; reg57=pos_nodes[4][1]*reg65; reg54=reg19-reg54; reg19=pos_nodes[6][0]*reg81; reg85=reg9+reg85;
    reg87=reg39+reg87; reg88=reg49-reg88; reg39=reg6*reg51; reg45=reg79+reg45; reg49=pos_nodes[3][2]*reg35;
    reg79=pos_nodes[4][0]*reg65; reg72=reg84-reg72; reg83=reg70+reg83; reg70=reg17*reg14; reg61=0.5*reg61;
    reg8=reg13*reg8; reg13=0.25*reg50; reg29=reg9+reg29; reg86=reg73+reg86; reg49=reg45+reg49;
    reg88=reg74+reg88; reg45=pos_nodes[7][2]*reg29; reg79=reg72-reg79; reg72=pos_nodes[7][1]*reg29; reg57=reg54-reg57;
    reg54=pos_nodes[5][0]*reg83; reg87=reg53+reg87; reg62=reg19+reg62; reg19=pos_nodes[7][0]*reg85; reg53=reg8*pos_nodes[5][1];
    reg73=reg8*pos_nodes[5][0]; reg74=reg23*reg14; reg70=reg43+reg70; reg71=reg68+reg71; reg43=pos_nodes[7][1]*reg85;
    reg67=reg64+reg67; reg64=pos_nodes[5][1]*reg83; reg68=pos_nodes[7][2]*reg85; reg78=reg77+reg78; reg77=reg4*reg1;
    reg80=reg16*reg61; reg84=reg15*pos_nodes[4][2]; reg76=reg89+reg76; reg89=pos_nodes[7][0]*reg29; T reg91=reg13*reg4;
    T reg92=2*reg39; reg17=reg5*reg17; reg5=pos_nodes[4][2]*reg65; reg90=reg82-reg90; reg82=pos_nodes[6][0]*reg70;
    reg87=reg53+reg87; reg23=reg7*reg23; reg19=reg62+reg19; reg7=pos_nodes[8][0]*reg92; reg53=reg17*pos_nodes[6][1];
    reg57=reg64+reg57; reg62=reg17*pos_nodes[6][0]; reg74=reg9+reg74; reg9=pos_nodes[8][0]*reg80; reg89=reg76+reg89;
    reg51=reg10*reg51; reg71=reg73+reg71; reg64=pos_nodes[8][1]*reg92; reg43=reg67+reg43; reg67=reg8*pos_nodes[5][2];
    reg73=pos_nodes[8][2]*reg92; reg68=reg78+reg68; reg76=reg0*reg6; reg78=reg16*reg77; T reg93=pos_nodes[6][1]*reg70;
    reg5=reg90-reg5; reg49=reg84+reg49; reg84=pos_nodes[5][2]*reg83; reg45=reg88+reg45; reg88=pos_nodes[8][2]*reg80;
    reg90=2*reg91; reg72=reg86+reg72; reg86=pos_nodes[8][1]*reg80; reg79=reg54+reg79; reg54=pos_nodes[7][1]*reg74;
    reg57=reg93+reg57; reg93=2*reg51; reg79=reg82+reg79; reg82=pos_nodes[9][0]*reg78; T reg94=pos_nodes[7][0]*reg74;
    reg9=reg89-reg9; reg50=0.5*reg50; reg89=reg16*reg76; reg71=reg62+reg71; reg62=reg23*pos_nodes[7][0];
    T reg95=pos_nodes[9][1]*reg90; reg64=reg43-reg64; reg5=reg84+reg5; reg43=reg17*pos_nodes[6][2]; reg84=pos_nodes[9][2]*reg90;
    reg73=reg68-reg73; reg13=reg13*reg3; reg68=reg1*reg3; T reg96=pos_nodes[6][2]*reg70; T reg97=pos_nodes[9][1]*reg78;
    T reg98=reg39*reg16; T reg99=reg23*pos_nodes[7][1]; reg87=reg53+reg87; reg86=reg72-reg86; reg49=reg67+reg49;
    reg53=pos_nodes[9][2]*reg78; reg88=reg45-reg88; reg7=reg19-reg7; reg19=pos_nodes[9][0]*reg90; reg5=reg96+reg5;
    reg45=pos_nodes[10][1]*reg93; reg95=reg64-reg95; reg64=pos_nodes[10][0]*reg93; reg19=reg7-reg19; reg7=reg91*reg16;
    reg67=pos_nodes[10][2]*reg93; reg84=reg73-reg84; reg49=reg43+reg49; reg43=reg16*reg68; reg72=reg16*reg50;
    reg73=reg23*pos_nodes[7][2]; reg96=pos_nodes[7][2]*reg74; T reg100=pos_nodes[8][1]*reg89; reg54=reg57-reg54; reg57=pos_nodes[10][2]*reg80;
    T reg101=2*reg13; reg53=reg88-reg53; reg99=reg87+reg99; reg87=reg98*pos_nodes[8][0]; reg88=reg98*pos_nodes[8][1];
    T reg102=reg10*reg0; reg94=reg79-reg94; reg82=reg9-reg82; reg9=pos_nodes[8][0]*reg89; reg79=pos_nodes[10][0]*reg80;
    T reg103=pos_nodes[10][1]*reg80; reg97=reg86-reg97; reg62=reg71+reg62; reg71=pos_nodes[11][1]*reg43; reg103=reg97+reg103;
    reg86=pos_nodes[9][1]*reg72; reg100=reg54-reg100; reg54=reg41*reg61; reg9=reg94-reg9; reg94=reg7*pos_nodes[9][1];
    reg99=reg88+reg99; reg96=reg5-reg96; reg5=pos_nodes[8][2]*reg89; reg88=pos_nodes[9][0]*reg72; reg97=pos_nodes[11][0]*reg43;
    T reg104=pow(reg2,2); reg64=reg19-reg64; reg19=pos_nodes[11][0]*reg101; reg79=reg82+reg79; reg57=reg53+reg57;
    reg53=pos_nodes[11][2]*reg43; reg82=reg98*pos_nodes[8][2]; T reg105=pos_nodes[11][1]*reg101; T reg106=pos_nodes[11][2]*reg101; reg67=reg84-reg67;
    reg45=reg95-reg45; reg84=reg16*reg102; reg62=reg87+reg62; reg87=reg7*pos_nodes[9][0]; reg95=reg51*reg16;
    reg73=reg49+reg73; reg16=reg16*reg13; reg104=1-reg104; reg49=pos_nodes[10][1]*reg95; reg94=reg99+reg94;
    reg5=reg96-reg5; reg96=pos_nodes[9][2]*reg72; reg71=reg103-reg71; reg99=pos_nodes[12][1]*reg54; reg53=reg57-reg53;
    reg57=pos_nodes[12][2]*reg54; reg103=pos_nodes[12][1]*reg92; reg105=reg45-reg105; reg45=pos_nodes[12][0]*reg92; reg19=reg64-reg19;
    reg64=reg7*pos_nodes[9][2]; reg73=reg82+reg73; reg86=reg100+reg86; reg82=pos_nodes[10][1]*reg84; reg100=pos_nodes[10][0]*reg84;
    reg88=reg9+reg88; reg9=pos_nodes[12][0]*reg54; T reg107=pos_nodes[10][0]*reg95; reg87=reg62+reg87; reg106=reg67-reg106;
    reg97=reg79-reg97; reg62=reg41*reg77; reg67=pos_nodes[12][2]*reg92; reg82=reg86-reg82; reg57=reg53-reg57;
    reg53=pos_nodes[13][2]*reg62; reg39=reg39*reg41; reg79=reg41*reg76; reg86=pos_nodes[10][2]*reg95; reg64=reg73+reg64;
    reg45=reg19+reg45; reg19=pos_nodes[13][0]*reg90; reg73=reg16*pos_nodes[11][1]; T reg108=pos_nodes[13][2]*reg90; reg107=reg87+reg107;
    reg87=reg16*pos_nodes[11][0]; reg67=reg106+reg67; reg103=reg105+reg103; reg105=pos_nodes[13][1]*reg90; reg49=reg94+reg49;
    reg94=pos_nodes[13][0]*reg62; reg106=pos_nodes[13][1]*reg62; reg99=reg71-reg99; reg9=reg97-reg9; reg71=pos_nodes[11][1]*reg72;
    reg100=reg88-reg100; reg88=pos_nodes[11][0]*reg72; reg97=0.25*reg104; T reg109=pos_nodes[10][2]*reg84; reg96=reg5+reg96;
    reg5=pos_nodes[14][0]*reg93; reg108=reg67+reg108; reg109=reg96-reg109; reg67=pos_nodes[11][2]*reg72; reg96=reg41*reg68;
    T reg110=pos_nodes[14][1]*reg93; reg94=reg9-reg94; reg19=reg45+reg19; reg9=pos_nodes[14][0]*reg54; reg45=reg16*pos_nodes[11][2];
    T reg111=pos_nodes[12][0]*reg79; reg88=reg100-reg88; reg91=reg91*reg41; reg100=reg2*reg3; T reg112=reg39*pos_nodes[12][1];
    reg49=reg73+reg49; reg3=reg3*reg97; reg73=pos_nodes[14][2]*reg93; T reg113=reg50*reg41; T reg114=pos_nodes[12][1]*reg79;
    reg71=reg82-reg71; reg106=reg99-reg106; reg82=pos_nodes[14][1]*reg54; reg99=pos_nodes[14][2]*reg54; reg53=reg57-reg53;
    reg86=reg64+reg86; reg105=reg103+reg105; reg57=reg39*pos_nodes[12][0]; reg107=reg87+reg107; reg64=pos_nodes[15][1]*reg96;
    reg112=reg49+reg112; reg49=reg91*pos_nodes[13][1]; reg82=reg106+reg82; reg114=reg71-reg114; reg71=pos_nodes[13][1]*reg113;
    reg111=reg88-reg111; reg87=pos_nodes[13][0]*reg113; reg88=pos_nodes[15][2]*reg101; reg103=pos_nodes[15][0]*reg96; reg9=reg94+reg9;
    reg94=pos_nodes[15][1]*reg101; reg110=reg105+reg110; reg67=reg109-reg67; reg105=pos_nodes[12][2]*reg79; reg106=2*reg3;
    reg5=reg19+reg5; reg57=reg107+reg57; reg19=reg91*pos_nodes[13][0]; reg51=reg51*reg41; reg97=reg4*reg97;
    reg107=pos_nodes[15][0]*reg101; reg86=reg45+reg86; reg45=reg39*pos_nodes[12][2]; reg99=reg53+reg99; reg53=pos_nodes[15][2]*reg96;
    reg109=reg6*reg100; reg4=reg4*reg2; reg73=reg108+reg73; reg108=reg41*reg102; T reg115=reg51*pos_nodes[14][1];
    reg49=reg112+reg49; reg94=reg110+reg94; reg110=reg6*reg4; reg45=reg86+reg45; reg86=reg51*pos_nodes[14][0];
    reg112=pos_nodes[16][1]*reg109; reg19=reg57+reg19; reg64=reg82-reg64; reg105=reg67-reg105; reg57=pos_nodes[13][2]*reg113;
    reg67=pos_nodes[16][2]*reg106; reg82=2*reg97; T reg116=pos_nodes[16][1]*reg106; reg104=0.5*reg104; reg53=reg99-reg53;
    reg71=reg114+reg71; reg99=pos_nodes[16][0]*reg109; reg114=reg91*pos_nodes[13][2]; reg87=reg111+reg87; reg111=pos_nodes[14][0]*reg108;
    reg107=reg5+reg107; reg41=reg13*reg41; reg88=reg73+reg88; reg5=pos_nodes[16][2]*reg109; reg13=pos_nodes[14][1]*reg108;
    reg73=pos_nodes[16][0]*reg106; reg103=reg9-reg103; reg9=pos_nodes[17][2]*reg82; reg5=reg88-reg5; reg88=pos_nodes[17][2]*reg110;
    T reg117=reg51*pos_nodes[14][2]; reg67=reg53-reg67; reg114=reg45+reg114; reg86=reg19+reg86; reg19=reg41*pos_nodes[15][0];
    reg115=reg49+reg115; reg45=reg41*pos_nodes[15][1]; reg111=reg87-reg111; reg49=pos_nodes[15][0]*reg113; reg53=reg6*reg104;
    reg87=pos_nodes[17][1]*reg110; T reg118=reg6*reg3; reg112=reg94-reg112; reg57=reg105+reg57; reg94=pos_nodes[14][2]*reg108;
    reg116=reg64-reg116; reg73=reg103-reg73; reg64=pos_nodes[17][0]*reg82; reg13=reg71-reg13; reg71=pos_nodes[15][1]*reg113;
    reg103=pos_nodes[17][0]*reg110; reg99=reg107-reg99; reg105=pos_nodes[17][1]*reg82; reg107=reg10*reg4; reg9=reg67-reg9;
    reg105=reg116-reg105; reg67=pos_nodes[18][2]*reg82; reg116=pos_nodes[18][0]*reg82; reg49=reg111-reg49; reg111=pos_nodes[16][0]*reg53;
    reg64=reg73-reg64; reg88=reg5-reg88; reg5=pos_nodes[18][2]*reg107; reg73=pos_nodes[16][1]*reg53; reg71=reg13-reg71;
    reg13=pos_nodes[18][0]*reg107; reg103=reg99-reg103; reg99=pos_nodes[15][2]*reg113; reg94=reg57-reg94; reg6=reg6*reg97;
    reg117=reg114+reg117; reg57=reg41*pos_nodes[15][2]; reg114=reg118*pos_nodes[16][1]; reg45=reg115+reg45; reg115=reg10*reg100;
    T reg119=pos_nodes[18][1]*reg107; reg87=reg112-reg87; reg19=reg86+reg19; reg86=reg118*pos_nodes[16][0]; reg112=pos_nodes[18][1]*reg82;
    T reg120=pos_nodes[19][0]*reg106; T reg121=pos_nodes[19][2]*reg115; reg5=reg88-reg5; reg13=reg103-reg13; reg88=pos_nodes[19][0]*reg115;
    reg116=reg64+reg116; reg64=reg6*pos_nodes[17][0]; reg86=reg19+reg86; reg19=pos_nodes[16][2]*reg53; reg103=reg118*pos_nodes[16][2];
    reg57=reg117+reg57; reg97=reg10*reg97; reg99=reg94-reg99; reg94=reg6*pos_nodes[17][1]; reg114=reg45+reg114;
    reg45=pos_nodes[19][1]*reg115; reg119=reg87-reg119; reg87=pos_nodes[19][1]*reg106; reg112=reg105+reg112; reg105=reg10*reg104;
    reg67=reg9+reg67; reg9=pos_nodes[19][2]*reg106; reg111=reg49-reg111; reg49=pos_nodes[17][0]*reg53; reg117=pos_nodes[17][1]*reg53;
    reg73=reg71-reg73; reg3=reg10*reg3; reg49=reg111+reg49; reg10=pos_nodes[18][0]*reg105; reg121=reg5-reg121;
    reg103=reg57+reg103; reg5=reg6*pos_nodes[17][2]; reg19=reg99-reg19; reg57=pos_nodes[17][2]*reg53; reg71=reg97*pos_nodes[18][1];
    reg94=reg114+reg94; reg45=reg119-reg45; reg87=reg112+reg87; reg9=reg67+reg9; reg67=pos_nodes[18][1]*reg105;
    reg117=reg73+reg117; reg64=reg86+reg64; reg73=reg97*pos_nodes[18][0]; reg88=reg13-reg88; reg120=reg116+reg120;
    reg13=reg3*pos_nodes[19][1]; reg71=reg94+reg71; reg73=reg64+reg73; reg64=reg3*pos_nodes[19][0]; reg86=pos_nodes[18][2]*reg105;
    reg57=reg19+reg57; reg19=pos_nodes[19][1]*reg105; reg67=reg117+reg67; reg5=reg103+reg5; reg94=reg97*pos_nodes[18][2];
    reg99=reg88*reg9; reg103=reg120*reg121; reg10=reg49+reg10; reg49=pos_nodes[19][0]*reg105; reg111=reg45*reg9;
    reg112=reg87*reg121; reg94=reg5+reg94; reg5=reg3*pos_nodes[19][2]; reg99=reg103-reg99; reg114=reg120*reg45;
    reg111=reg112-reg111; reg86=reg57+reg86; reg57=pos_nodes[19][2]*reg105; reg13=reg71+reg13; reg19=reg67-reg19;
    reg64=reg73+reg64; reg49=reg10-reg49; reg10=reg88*reg87; reg64=pos[0]-reg64; reg67=reg49*reg111;
    reg71=var_inter[0]*reg19; reg73=var_inter[0]*reg49; reg116=reg19*reg99; reg10=reg114-reg10; reg5=reg94+reg5;
    reg13=pos[1]-reg13; reg57=reg86-reg57; reg86=reg57*reg10; reg94=reg19*reg121; reg117=reg45*reg57;
    reg119=reg19*reg9; reg67=reg116-reg67; reg116=reg87*reg57; T reg122=var_inter[0]*reg57; T reg123=reg120*reg57;
    T reg124=reg49*reg9; reg71=reg13+reg71; reg13=var_inter[1]*reg87; T reg125=reg88*reg57; T reg126=reg49*reg121;
    reg73=reg64+reg73; reg64=var_inter[1]*reg120; reg5=pos[2]-reg5; reg116=reg119-reg116; reg117=reg94-reg117;
    reg125=reg126-reg125; reg86=reg67-reg86; reg123=reg124-reg123; reg67=reg49*reg45; T reg127=var_inter[2]*reg88;
    T reg128=var_inter[2]*reg45; reg73=reg64+reg73; reg64=reg88*reg19; T reg129=reg49*reg87; reg122=reg5+reg122;
    reg5=var_inter[1]*reg9; T reg130=reg120*reg19; reg71=reg13+reg71; reg123=reg123/reg86; reg64=reg67-reg64;
    reg130=reg129-reg130; reg116=reg116/reg86; reg117=reg117/reg86; reg111=reg111/reg86; reg125=reg125/reg86;
    reg99=reg99/reg86; reg73=reg127+reg73; reg122=reg5+reg122; reg71=reg128+reg71; reg5=var_inter[2]*reg121;
    reg116=reg73*reg116; reg123=reg71*reg123; reg125=reg125*reg71; reg117=reg73*reg117; reg99=reg99*reg71;
    reg111=reg73*reg111; reg130=reg130/reg86; reg64=reg64/reg86; reg86=reg10/reg86; reg122=reg5+reg122;
    reg86=reg86*reg122; reg111=reg99-reg111; reg64=reg122*reg64; reg125=reg117-reg125; reg130=reg122*reg130;
    reg116=reg123-reg116; var_inter[0]+=reg111-reg86; var_inter[1]+=reg64+reg125; var_inter[2]+=reg116-reg130;

}
#ifndef STRUCT_Global
#define STRUCT_Global
struct Global {};
#endif // STRUCT_Global
template<class TVI,class TVAL,class T> void get_interp(const Hexa_20 &ne,const Global &n,const TVI &var_inter,const TVAL &val,T &res) {
    res=val[0];

}
#ifndef STRUCT_Elementary_mul_nb_nodes
#define STRUCT_Elementary_mul_nb_nodes
struct Elementary_mul_nb_nodes {};
#endif // STRUCT_Elementary_mul_nb_nodes
template<class TVI,class TVAL,class T> void get_interp(const Hexa_20 &ne,const Elementary_mul_nb_nodes &n,const TVI &var_inter,const TVAL &val,T &res) {
    res=val[0];

}
#ifndef STRUCT_Nodal
#define STRUCT_Nodal
struct Nodal {};
#endif // STRUCT_Nodal
template<class TVI,class TVAL,class T> void get_interp(const Hexa_20 &ne,const Nodal &n,const TVI &var_inter,const TVAL &val,T &res) {
    T reg0=2*var_inter[0]; T reg1=2*var_inter[1]; reg0=reg0-1; T reg2=1-reg0; T reg3=2*var_inter[2];
    reg1=reg1-1; T reg4=1+reg0; T reg5=reg0-reg1; T reg6=0.125*reg2; T reg7=1-reg1;
    reg3=reg3-1; T reg8=reg1+reg0; T reg9=0.125*reg4; T reg10=reg5-reg3; T reg11=1+reg1;
    T reg12=reg3+reg8; T reg13=reg7*reg9; T reg14=1-reg3; T reg15=reg6*reg7; reg10=reg10-2;
    T reg16=reg1-reg0; reg9=reg11*reg9; T reg17=reg15*reg14; T reg18=reg8-reg3; T reg19=2+reg12;
    T reg20=reg14*reg13; T reg21=reg14*reg9; reg18=reg18-2; reg6=reg6*reg11; reg10=reg20*reg10;
    reg19=reg17*reg19; reg17=reg16-reg3; reg10=val[1]*reg10; reg19=val[0]*reg19; reg18=reg21*reg18;
    reg20=reg14*reg6; reg17=reg17-2; reg21=1+reg3; reg8=reg3-reg8; reg18=val[2]*reg18;
    reg5=reg3+reg5; reg17=reg20*reg17; reg19=reg10-reg19; reg15=reg15*reg21; reg8=reg8-2;
    reg18=reg19+reg18; reg5=reg5-2; reg13=reg13*reg21; reg15=reg8*reg15; reg0=pow(reg0,2);
    reg17=val[3]*reg17; reg15=val[4]*reg15; reg5=reg13*reg5; reg17=reg18+reg17; reg16=reg3+reg16;
    reg0=1-reg0; reg9=reg9*reg21; reg1=pow(reg1,2); reg12=reg12-2; reg1=1-reg1;
    reg5=val[5]*reg5; reg17=reg15+reg17; reg16=reg16-2; reg0=0.25*reg0; reg12=reg9*reg12;
    reg6=reg6*reg21; reg16=reg6*reg16; reg6=reg0*reg7; reg12=val[6]*reg12; reg5=reg17+reg5;
    reg1=0.25*reg1; reg8=reg1*reg4; reg12=reg5+reg12; reg16=val[7]*reg16; reg5=reg6*reg14;
    reg16=reg12+reg16; reg5=val[8]*reg5; reg0=reg0*reg11; reg9=reg8*reg14; reg5=reg16+reg5;
    reg9=val[9]*reg9; reg10=reg0*reg14; reg1=reg2*reg1; reg9=reg5+reg9; reg10=val[10]*reg10;
    reg14=reg1*reg14; reg10=reg9+reg10; reg14=val[11]*reg14; reg6=reg6*reg21; reg3=pow(reg3,2);
    reg8=reg8*reg21; reg6=val[12]*reg6; reg3=1-reg3; reg14=reg10+reg14; reg6=reg14+reg6;
    reg8=val[13]*reg8; reg0=reg0*reg21; reg3=0.25*reg3; reg8=reg6+reg8; reg0=val[14]*reg0;
    reg21=reg1*reg21; reg2=reg2*reg3; reg0=reg8+reg0; reg21=val[15]*reg21; reg1=reg2*reg7;
    reg4=reg3*reg4; reg7=reg4*reg7; reg1=val[16]*reg1; reg21=reg0+reg21; reg1=reg21+reg1;
    reg4=reg4*reg11; reg7=val[17]*reg7; reg11=reg2*reg11; reg4=val[18]*reg4; reg7=reg1+reg7;
    reg11=val[19]*reg11; reg4=reg7+reg4; res=reg4+reg11;

}
#ifndef STRUCT_Elementary_mul_nb_nodes_of_each_children_elem
#define STRUCT_Elementary_mul_nb_nodes_of_each_children_elem
struct Elementary_mul_nb_nodes_of_each_children_elem {};
#endif // STRUCT_Elementary_mul_nb_nodes_of_each_children_elem
template<class TVI,class TVAL,class T> void get_interp(const Hexa_20 &ne,const Elementary_mul_nb_nodes_of_each_children_elem &n,const TVI &var_inter,const TVAL &val,T &res) {
    res=val[0];

}
#ifndef STRUCT_Gauss
#define STRUCT_Gauss
struct Gauss {};
#endif // STRUCT_Gauss
template<class TVI,class TVAL,class T> void get_interp(const Hexa_20 &ne,const Gauss &n,const TVI &var_inter,const TVAL &val,T &res) {
    res=val[0];

}
#ifndef STRUCT_Der_nodal
#define STRUCT_Der_nodal
struct Der_nodal {};
#endif // STRUCT_Der_nodal
template<class TVI,class TVAL,class T> void get_interp(const Hexa_20 &ne,const Der_nodal &n,const TVI &var_inter,const TVAL &val,T &res) {
    res=val[0];

}
#ifndef STRUCT_Elementary
#define STRUCT_Elementary
struct Elementary {};
#endif // STRUCT_Elementary
template<class TVI,class TVAL,class T> void get_interp(const Hexa_20 &ne,const Elementary &n,const TVI &var_inter,const TVAL &val,T &res) {
    res=val[0];

}
#ifndef STRUCT_Skin_elementary
#define STRUCT_Skin_elementary
struct Skin_elementary {};
#endif // STRUCT_Skin_elementary
template<class TVI,class TVAL,class T> void get_interp(const Hexa_20 &ne,const Skin_elementary &n,const TVI &var_inter,const TVAL &val,T &res) {
    res=val[0];

}
#ifndef AUTORIZEDPERM
#define AUTORIZEDPERM
template<class T> struct AuthorizedPerm;
#endif // AUTORIZEDPERM
template<> struct AuthorizedPerm<Hexa_20> {
    static const unsigned nb_permutations = 0;
    template<class TE> static void make_permutation( TE &e, unsigned nb_perm ) {
    }
    template<class TE> static void unmake_permutation( TE &e, unsigned nb_perm ) {
    }
};

}
#endif // LMT_HEXA_20
